# Generated by Django 3.2.25 on 2025-01-13 04:18

from django.db import migrations, models
import django.db.models.deletion
import potato.FHIR_DataTypes.FHIR_primitive


class Migration(migrations.Migration):

    dependencies = [
        ('potato', '0011_auto_20250112_1405'),
    ]

    operations = [
        migrations.CreateModel(
            name='FHIR_CarePlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_DeviceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GenomicStudy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_ImagingStudy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Immunization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_ImmunizationRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Medication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_MedicationAdministration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_MedicationDispense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_MedicationRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_MedicationStatement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_NutritionOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_ObservationDefinition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Procedure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_ServiceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.AddField(
            model_name='fhir_observation',
            name='instantiates_canonical',
            field=potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CanonicalField(blank=True, max_length=1000, null=True),
        ),
        migrations.AlterField(
            model_name='fhir_allergyintolerance_note',
            name='allergy_intolerance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='potato.fhir_allergyintolerance'),
        ),
        migrations.AlterField(
            model_name='fhir_allergyintolerance_reaction',
            name='allergy_intolerance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reactions', to='potato.fhir_allergyintolerance'),
        ),
        migrations.AlterField(
            model_name='fhir_allergyintolerance_reaction',
            name='exposureRoute_cc',
            field=models.ManyToManyField(blank=True, limit_choices_to={'binding__binding_rule': 'https://www.hl7.org/fhir/valueset-route-codes.html'}, related_name='allergyintolerance_reaction_exposureroute', to='potato.FHIR_GP_Coding'),
        ),
        migrations.AlterField(
            model_name='fhir_allergyintolerance_reaction_manifestation',
            name='reaction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manifestations', to='potato.fhir_allergyintolerance_reaction'),
        ),
        migrations.AlterField(
            model_name='fhir_allergyintolerance_reaction_note',
            name='reaction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reaction_notes', to='potato.fhir_allergyintolerance_reaction'),
        ),
        migrations.AlterField(
            model_name='fhir_patient',
            name='gender',
            field=potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other'), ('unknown', 'Unknown')], max_length=10, null=True),
        ),
        migrations.AlterField(
            model_name='fhir_patient',
            name='multiple_birth_boolean',
            field=potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_BooleanField(null=True),
        ),
        migrations.AlterField(
            model_name='fhir_patient',
            name='multiple_birth_integer',
            field=potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_PositiveIntField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='TriggeredByThrough',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(choices=[('reflex', 'Reflex'), ('repeat', 'Repeat'), ('re-run', 'Re-run')], max_length=7)),
                ('reason', models.CharField(blank=True, max_length=255, null=True)),
                ('from_Observation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='observation', to='potato.fhir_observation')),
                ('partOf_genomicStudy', models.ManyToManyField(blank=True, related_name='observation_partOf_genomicStudies', to='potato.FHIR_GenomicStudy')),
                ('partOf_imagingStudy', models.ManyToManyField(blank=True, related_name='observation_partOf_imagingStudies', to='potato.FHIR_ImagingStudy')),
                ('partOf_immunization', models.ManyToManyField(blank=True, related_name='observation_partOf_immunizations', to='potato.FHIR_Immunization')),
                ('partOf_medicationAdministration', models.ManyToManyField(blank=True, related_name='observation_partOf_medicationAdministrations', to='potato.FHIR_MedicationAdministration')),
                ('partOf_medicationDispense', models.ManyToManyField(blank=True, related_name='observation_partOf_medicationDispensers', to='potato.FHIR_MedicationDispense')),
                ('partOf_medicationStatement', models.ManyToManyField(blank=True, related_name='observation_partOf_medicationStatements', to='potato.FHIR_MedicationStatement')),
                ('partOf_procedure', models.ManyToManyField(blank=True, related_name='observation_partOf_procedures', to='potato.FHIR_Procedure')),
                ('toTriggeredBy_Observation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='observation_triggeredBy', to='potato.fhir_observation')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Observation_Identifier',
            fields=[
                ('fhir_gp_identifier_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_identifier')),
                ('observation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='observation_identifiers', to='potato.fhir_observation')),
            ],
            bases=('potato.fhir_gp_identifier',),
        ),
        migrations.AddField(
            model_name='fhir_observation',
            name='basedOn_carePlan',
            field=models.ManyToManyField(blank=True, related_name='observation_basedOn_carePlans', to='potato.FHIR_CarePlan'),
        ),
        migrations.AddField(
            model_name='fhir_observation',
            name='basedOn_deviceRequest',
            field=models.ManyToManyField(blank=True, related_name='observation_basedOn_deviceRequests', to='potato.FHIR_DeviceRequest'),
        ),
        migrations.AddField(
            model_name='fhir_observation',
            name='basedOn_immunizationRecommendation',
            field=models.ManyToManyField(blank=True, related_name='observation_basedOn_immunizationRecommendations', to='potato.FHIR_ImmunizationRecommendation'),
        ),
        migrations.AddField(
            model_name='fhir_observation',
            name='basedOn_medicationRequest',
            field=models.ManyToManyField(blank=True, related_name='observation_basedOn_medicationRequests', to='potato.FHIR_MedicationRequest'),
        ),
        migrations.AddField(
            model_name='fhir_observation',
            name='basedOn_nutritionOrder',
            field=models.ManyToManyField(blank=True, related_name='observation_basedOn_nutritionOrders', to='potato.FHIR_NutritionOrder'),
        ),
        migrations.AddField(
            model_name='fhir_observation',
            name='basedOn_serviceRequest',
            field=models.ManyToManyField(blank=True, related_name='observation_basedOn_serviceRequests', to='potato.FHIR_ServiceRequest'),
        ),
        migrations.AddField(
            model_name='fhir_observation',
            name='instantiates_reference',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_instantiates_reference', to='potato.fhir_observationdefinition'),
        ),
        migrations.AddField(
            model_name='fhir_observation',
            name='triggeredBy',
            field=models.ManyToManyField(related_name='triggeredBys', through='potato.TriggeredByThrough', to='potato.FHIR_Observation'),
        ),
    ]
