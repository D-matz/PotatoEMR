# Generated by Django 3.2.25 on 2025-01-01 22:53

from django.db import migrations, models
import django.db.models.deletion
import potato.FHIR_DataTypes.FHIR_primitive


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FHIR_Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('use', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, choices=[('home', 'Home'), ('work', 'Work'), ('temp', 'Temporary'), ('old', 'Old'), ('billing', 'Billing')], max_length=20, null=True)),
                ('type', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, choices=[('postal', 'Postal'), ('physical', 'Physical'), ('both', 'Both')], max_length=20, null=True)),
                ('text', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('city', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('district', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('state', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('postalCode', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=20, null=True)),
                ('country', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=3, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Attachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contentType', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(max_length=256)),
                ('language', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(max_length=10)),
                ('data', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_Base64BinaryField()),
                ('url', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_URLField(max_length=1024)),
                ('size', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_SignedInt64Field()),
                ('hash', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_Base64BinaryField()),
                ('title', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(max_length=256)),
                ('height', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_PositiveIntField(blank=True, null=True)),
                ('width', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_PositiveIntField(blank=True, null=True)),
                ('frames', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_PositiveIntField(blank=True, null=True)),
                ('duration', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('pages', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_PositiveIntField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_CodeableConcept',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=1024, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Coding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_URIField(max_length=1024)),
                ('version', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=256, null=True)),
                ('code', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, max_length=256, null=True)),
                ('display', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=256, null=True)),
                ('userSelected', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_HumanName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('use', models.CharField(blank=True, choices=[('usual', 'Usual'), ('official', 'Official'), ('temp', 'Temporary'), ('nickname', 'Nickname'), ('anonymous', 'Anonymous'), ('old', 'Old'), ('maiden', 'Maiden')], max_length=20, null=True)),
                ('text', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('family', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Money',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DecimalField(blank=True, decimal_places=17, max_digits=18, null=True)),
                ('currency', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, help_text='ISO 4217 currency code (e.g., USD, EUR).', max_length=3, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Period',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Quantity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DecimalField(decimal_places=17, max_digits=18)),
                ('comparator', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, choices=[('<', 'Less than'), ('<=', 'Less than or equal to'), ('>=', 'Greater than or equal to'), ('>', 'Greater than')], max_length=2, null=True)),
                ('unit', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(max_length=64)),
                ('system', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_URIField(blank=True, max_length=255, null=True)),
                ('code', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, max_length=64, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_BooleanField(help_text="Whether this patient's record is in active use", null=True)),
                ('gender', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other'), ('unknown', 'Unknown')], help_text='male | female | other | unknown', max_length=10, null=True)),
                ('deceased_boolean', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_BooleanField(help_text='Indicates if the individual is deceased', null=True)),
                ('marital_status', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(choices=[('A', 'Annulled'), ('D', 'Divorced'), ('I', 'Interlocutory'), ('L', 'Legally Separated'), ('M', 'Married'), ('C', 'Common Law'), ('P', 'Polygamous'), ('T', 'Domestic Partner'), ('U', 'Unmarried'), ('S', 'Never Married'), ('W', 'Widowed'), ('UNK', 'Unknown')], help_text='Marital (civil) status of a patient', max_length=50, null=True)),
                ('multiple_birth_boolean', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_BooleanField(help_text='Whether patient is part of a multiple birth', null=True)),
                ('multiple_birth_integer', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_PositiveIntField(blank=True, help_text='Order in the multiple birth', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Practitioner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_PractitionerRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_primitive_DateField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('precision', models.CharField(choices=[('year', 'Year'), ('month', 'Month'), ('day', 'Day')], help_text='Precision can be YYYY, YYYY-MM, YYYY-MM-DD', max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_primitive_DateTimeField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField()),
                ('precision', models.CharField(choices=[('year', 'Year'), ('month', 'Month'), ('day', 'Day'), ('time', 'Time')], help_text='Precision can be YYYY, YYYY-MM, YYYY-MM-DD, YYYY-MM-DD-hh:mm:ss+zz:zz', max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_RelatedPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_SP_Meta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version_id', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_IdField(blank=True, max_length=64, null=True)),
                ('last_updated', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_InstantField(blank=True, max_length=300, null=True)),
                ('source', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_URIField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Quantity_Count',
            fields=[
                ('fhir_gp_quantity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_quantity')),
            ],
            bases=('potato.fhir_gp_quantity',),
        ),
        migrations.CreateModel(
            name='FHIR_GP_Quantity_Distance',
            fields=[
                ('fhir_gp_quantity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_quantity')),
            ],
            bases=('potato.fhir_gp_quantity',),
        ),
        migrations.CreateModel(
            name='FHIR_GP_Quantity_Duration',
            fields=[
                ('fhir_gp_quantity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_quantity')),
            ],
            bases=('potato.fhir_gp_quantity',),
        ),
        migrations.CreateModel(
            name='FHIR_GP_Quantity_Money',
            fields=[
                ('fhir_gp_quantity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_quantity')),
            ],
            bases=('potato.fhir_gp_quantity',),
        ),
        migrations.CreateModel(
            name='FHIR_GP_Quantity_Simple',
            fields=[
                ('fhir_gp_quantity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_quantity')),
            ],
            bases=('potato.fhir_gp_quantity',),
        ),
        migrations.CreateModel(
            name='FHIR_SP_Meta_Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(max_length=255)),
                ('meta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='potato.fhir_sp_meta')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_SP_Meta_Security',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(max_length=99999)),
                ('meta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='securitys', to='potato.fhir_sp_meta')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_SP_Meta_Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CanonicalField(max_length=255)),
                ('meta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profiles', to='potato.fhir_sp_meta')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Patient_Link',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link_type', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(choices=[('replaced-by', 'Replaced by'), ('replaces', 'Replaces'), ('refer', 'Refer'), ('seealso', 'See also')], max_length=20)),
                ('from_patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_patient_links', to='potato.fhir_patient')),
                ('other_related_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='link_other_relatedPerson', to='potato.fhir_relatedperson')),
                ('to_patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_patient_links', to='potato.fhir_patient')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Patient_Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other'), ('unknown', 'Unknown')], help_text='male | female | other | unknown', max_length=10, null=True)),
                ('address', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='patient_contact_address', to='potato.fhir_gp_address')),
                ('name', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='patient_contact_name', to='potato.fhir_gp_humanname')),
                ('organization_foreigkey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_contact_organization', to='potato.fhir_organization')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_contacts', to='potato.fhir_patient')),
                ('period', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_gp_period')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Patient_Communication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferred', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_BooleanField()),
                ('language', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_gp_codeableconcept')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_communications', to='potato.fhir_patient')),
            ],
        ),
        migrations.AddField(
            model_name='fhir_patient',
            name='birth_date',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='patient_birthDate', to='potato.fhir_primitive_datefield'),
        ),
        migrations.AddField(
            model_name='fhir_patient',
            name='generalPractitioners_organization',
            field=models.ManyToManyField(related_name='patient_generalPractitioner_organization', to='potato.FHIR_Organization'),
        ),
        migrations.AddField(
            model_name='fhir_patient',
            name='generalPractitioners_practitioner',
            field=models.ManyToManyField(related_name='patient_generalPractitioner_practitioner', to='potato.FHIR_Practitioner'),
        ),
        migrations.AddField(
            model_name='fhir_patient',
            name='generalPractitioners_practitionerRole',
            field=models.ManyToManyField(related_name='patient_generalPractitioner_practitionerRole', to='potato.FHIR_PractitionerRole'),
        ),
        migrations.AddField(
            model_name='fhir_patient',
            name='link',
            field=models.ManyToManyField(related_name='patient_links', through='potato.FHIR_Patient_Link', to='potato.FHIR_Patient'),
        ),
        migrations.AddField(
            model_name='fhir_patient',
            name='managing_organization_foreignKey',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='patient_managingOrganization_organization', to='potato.fhir_organization'),
        ),
        migrations.CreateModel(
            name='FHIR_GP_Signature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('when', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_InstantField(blank=True, max_length=99999, null=True)),
                ('targetFormat', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, max_length=255, null=True)),
                ('sigFormat', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, max_length=255, null=True)),
                ('data', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_Base64BinaryField(blank=True, null=True)),
                ('onBehalfOf_device_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='onBehalfOf_device', to='potato.fhir_device')),
                ('onBehalfOf_organization_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='onBehalfOf_organization', to='potato.fhir_organization')),
                ('onBehalfOf_patient_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='onBehalfOf_patient', to='potato.fhir_patient')),
                ('onBehalfOf_practitioner_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='onBehalfOf_practitioner', to='potato.fhir_practitioner')),
                ('onBehalfOf_relatedPerson_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='onBehalfOf_relatedPerson', to='potato.fhir_relatedperson')),
                ('type', models.ManyToManyField(blank=True, related_name='types', to='potato.FHIR_GP_Coding')),
                ('who_device_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='who_device', to='potato.fhir_device')),
                ('who_organization_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='who_organization', to='potato.fhir_organization')),
                ('who_patient_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='who_patient', to='potato.fhir_patient')),
                ('who_practitioner_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='who_practitioner', to='potato.fhir_practitioner')),
                ('who_relatedPerson_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='who_relatedPerson', to='potato.fhir_relatedperson')),
            ],
        ),
        migrations.AddField(
            model_name='fhir_gp_period',
            name='end',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='period_end', to='potato.fhir_primitive_datetimefield'),
        ),
        migrations.AddField(
            model_name='fhir_gp_period',
            name='start',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='period_start', to='potato.fhir_primitive_datetimefield'),
        ),
        migrations.CreateModel(
            name='FHIR_GP_Identifier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('use', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, choices=[('usual', 'Usual'), ('official', 'Official'), ('temp', 'Temporary'), ('secondary', 'Secondary'), ('old', 'Old')], max_length=16, null=True)),
                ('system', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_URIField(blank=True, max_length=1024, null=True)),
                ('value', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=1024, null=True)),
                ('assigner_foreignKey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='identifier_assigner', to='potato.fhir_organization')),
                ('period', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='identifier_period', to='potato.fhir_gp_period')),
                ('type', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='identifier_type', to='potato.fhir_gp_codeableconcept')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_HumanName_Suffix',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(max_length=255)),
                ('human_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suffixes', to='potato.fhir_gp_humanname')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_HumanName_Prefix',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(max_length=255)),
                ('human_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prefixes', to='potato.fhir_gp_humanname')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_HumanName_Given',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(max_length=255)),
                ('human_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='given_names', to='potato.fhir_gp_humanname')),
            ],
        ),
        migrations.AddField(
            model_name='fhir_gp_humanname',
            name='period',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_gp_period'),
        ),
        migrations.CreateModel(
            name='FHIR_GP_ContactPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, choices=[('phone', 'Phone'), ('fax', 'Fax'), ('email', 'Email'), ('pager', 'Pager'), ('url', 'URL'), ('sms', 'SMS'), ('other', 'Other')], max_length=20, null=True)),
                ('value', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('use', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, choices=[('home', 'Home'), ('work', 'Work'), ('temp', 'Temporary'), ('old', 'Old'), ('mobile', 'Mobile')], max_length=20, null=True)),
                ('rank', models.PositiveIntegerField(blank=True, null=True)),
                ('period', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_gp_period')),
            ],
        ),
        migrations.AddField(
            model_name='fhir_gp_codeableconcept',
            name='coding',
            field=models.ManyToManyField(blank=True, to='potato.FHIR_GP_Coding'),
        ),
        migrations.CreateModel(
            name='FHIR_GP_Annotation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_string', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('text', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_MarkdownField(max_length=99999)),
                ('author_type', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, choices=[('authorReference', 'Reference'), ('authorString', 'String')], max_length=20, null=True)),
                ('author_organization_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='author_organization', to='potato.fhir_organization')),
                ('author_patient_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='author_patient', to='potato.fhir_patient')),
                ('author_practitionerRole_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='author_practitionerRole', to='potato.fhir_practitionerrole')),
                ('author_practitioner_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='author_practitioner', to='potato.fhir_practitioner')),
                ('author_relatedPerson_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='author_relatedPerson', to='potato.fhir_relatedperson')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_AddressLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(max_length=255)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='potato.fhir_gp_address')),
            ],
        ),
        migrations.AddField(
            model_name='fhir_gp_address',
            name='period',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_gp_period'),
        ),
        migrations.CreateModel(
            name='FHIR_RelatedPerson_Identifier',
            fields=[
                ('fhir_gp_identifier_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_identifier')),
                ('relatedPerson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='RelatedPerson_identifiers', to='potato.fhir_relatedperson')),
            ],
            bases=('potato.fhir_gp_identifier',),
        ),
        migrations.CreateModel(
            name='FHIR_Patient_Telecom',
            fields=[
                ('fhir_gp_contactpoint_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_contactpoint')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_telecoms', to='potato.fhir_patient')),
            ],
            bases=('potato.fhir_gp_contactpoint',),
        ),
        migrations.CreateModel(
            name='FHIR_Patient_Photo',
            fields=[
                ('fhir_gp_attachment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_attachment')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_photos', to='potato.fhir_patient')),
            ],
            bases=('potato.fhir_gp_attachment',),
        ),
        migrations.CreateModel(
            name='FHIR_Patient_Name',
            fields=[
                ('fhir_gp_humanname_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_humanname')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_names', to='potato.fhir_patient')),
            ],
            bases=('potato.fhir_gp_humanname',),
        ),
        migrations.CreateModel(
            name='FHIR_Patient_Identifier',
            fields=[
                ('fhir_gp_identifier_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_identifier')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_identifiers', to='potato.fhir_patient')),
            ],
            bases=('potato.fhir_gp_identifier',),
        ),
        migrations.CreateModel(
            name='FHIR_Patient_Contact_Telecom',
            fields=[
                ('fhir_gp_contactpoint_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_contactpoint')),
                ('patient_contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_contact_telecoms', to='potato.fhir_patient_contact')),
            ],
            bases=('potato.fhir_gp_contactpoint',),
        ),
        migrations.CreateModel(
            name='FHIR_Patient_Contact_Relationship',
            fields=[
                ('fhir_gp_codeableconcept_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_codeableconcept')),
                ('patient_contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_contact_relationships', to='potato.fhir_patient_contact')),
            ],
            bases=('potato.fhir_gp_codeableconcept',),
        ),
        migrations.CreateModel(
            name='FHIR_Patient_Address',
            fields=[
                ('fhir_gp_address_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_address')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_addresses', to='potato.fhir_patient')),
            ],
            bases=('potato.fhir_gp_address',),
        ),
        migrations.CreateModel(
            name='FHIR_GP_SampledData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interval', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DecimalField(blank=True, decimal_places=17, max_digits=18, null=True)),
                ('intervalUnit', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(max_length=64)),
                ('factor', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DecimalField(blank=True, decimal_places=17, max_digits=18, null=True)),
                ('lowerLimit', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DecimalField(blank=True, decimal_places=17, max_digits=18, null=True)),
                ('upperLimit', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DecimalField(blank=True, decimal_places=17, max_digits=18, null=True)),
                ('dimensions', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_PositiveIntField()),
                ('codeMap', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CanonicalField(blank=True, max_length=256, null=True)),
                ('offsets', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=1024, null=True)),
                ('data', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=1024, null=True)),
                ('origin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sampleddata_origin', to='potato.fhir_gp_quantity_simple')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_RatioRange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('denominator', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ratio_range_denominator', to='potato.fhir_gp_quantity_simple')),
                ('numerator_high', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ratio_range_numerator_high', to='potato.fhir_gp_quantity_simple')),
                ('numerator_low', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ratio_range_numerator_low', to='potato.fhir_gp_quantity_simple')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Ratio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numerator', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ratio_numerator', to='potato.fhir_gp_quantity')),
                ('denominator', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ratio_denominator', to='potato.fhir_gp_quantity_simple')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Range',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('high', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='range_high', to='potato.fhir_gp_quantity_simple')),
                ('low', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='range_low', to='potato.fhir_gp_quantity_simple')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.JSONField(blank=True, null=True)),
                ('count', models.PositiveIntegerField(blank=True, null=True)),
                ('countMax', models.PositiveIntegerField(blank=True, null=True)),
                ('duration', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('durationMax', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('durationUnit', models.CharField(blank=True, choices=[('s', 'Seconds'), ('min', 'Minutes'), ('h', 'Hours'), ('d', 'Days'), ('wk', 'Weeks'), ('mo', 'Months'), ('a', 'Years')], max_length=10, null=True)),
                ('frequency', models.PositiveIntegerField(blank=True, null=True)),
                ('frequencyMax', models.PositiveIntegerField(blank=True, null=True)),
                ('period', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('periodMax', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('periodUnit', models.CharField(blank=True, choices=[('s', 'Seconds'), ('min', 'Minutes'), ('h', 'Hours'), ('d', 'Days'), ('wk', 'Weeks'), ('mo', 'Months'), ('a', 'Years')], max_length=10, null=True)),
                ('dayOfWeek', models.CharField(blank=True, choices=[('mon', 'Monday'), ('tue', 'Tuesday'), ('wed', 'Wednesday'), ('thu', 'Thursday'), ('fri', 'Friday'), ('sat', 'Saturday'), ('sun', 'Sunday')], max_length=10, null=True)),
                ('timeOfDay', models.JSONField(blank=True, null=True)),
                ('when', models.JSONField(blank=True, null=True)),
                ('offset', models.PositiveIntegerField(blank=True, null=True)),
                ('boundsPeriod', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_gp_period')),
                ('boundsRange', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_gp_range')),
                ('code', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_gp_codeableconcept')),
                ('boundsDuration', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_gp_quantity_duration')),
            ],
        ),
    ]
