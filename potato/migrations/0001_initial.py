# Generated by Django 5.2 on 2025-04-09 02:01

import django.db.models.deletion
import potato.FHIR_DataTypes.FHIR_primitive
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FHIR_AllergyIntolerance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clinical_status_cctext', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=5000, null=True)),
                ('verification_status_cctext', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=5000, null=True)),
                ('type_cctext', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=5000, null=True)),
                ('code_cctext', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=5000, null=True)),
                ('onset_dateTime', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField(blank=True, null=True)),
                ('onset_string', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('recordedDate', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField(blank=True, null=True)),
                ('lastOccurrence', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_BiologicallyDerivedProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_CarePlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_CareTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_DeviceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Encounter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GenomicStudy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('use', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, choices=[('home', 'Home'), ('work', 'Work'), ('temp', 'Temporary'), ('old', 'Old'), ('billing', 'Billing')], max_length=20, null=True)),
                ('type', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, choices=[('postal', 'Postal'), ('physical', 'Physical'), ('both', 'Both')], max_length=20, null=True)),
                ('text', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('city', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('district', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('state', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('postalCode', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=20, null=True)),
                ('country', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=3, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Attachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contentType', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(max_length=256)),
                ('language', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(max_length=10)),
                ('data', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_Base64BinaryField()),
                ('url', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_URLField(max_length=1024)),
                ('size', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_SignedInt64Field()),
                ('hash', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_Base64BinaryField()),
                ('title', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(max_length=256)),
                ('time_datetime', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField(blank=True, null=True)),
                ('time_datetime_precision', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField_Precision(blank=True, choices=[('year', 'Year'), ('month', 'Month'), ('day', 'Day'), ('seconds', 'Seconds')], default='day', max_length=7, null=True)),
                ('height', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_PositiveIntField(blank=True, null=True)),
                ('width', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_PositiveIntField(blank=True, null=True)),
                ('frames', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_PositiveIntField(blank=True, null=True)),
                ('duration', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('pages', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_PositiveIntField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Coding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_URIField(max_length=1024)),
                ('version', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=256, null=True)),
                ('code', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, max_length=1024, null=True)),
                ('display', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=256, null=True)),
                ('userSelected', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_HumanName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('use', models.CharField(blank=True, choices=[('usual', 'Usual'), ('official', 'Official'), ('temp', 'Temporary'), ('nickname', 'Nickname'), ('anonymous', 'Anonymous'), ('old', 'Old'), ('maiden', 'Maiden')], max_length=20, null=True)),
                ('text', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('family', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Money',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DecimalField(blank=True, decimal_places=17, max_digits=18, null=True)),
                ('currency', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, help_text='ISO 4217 currency code (e.g., USD, EUR).', max_length=3, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Period',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_datetime', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField(blank=True, null=True)),
                ('start_datetime_precision', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField_Precision(blank=True, choices=[('year', 'Year'), ('month', 'Month'), ('day', 'Day'), ('seconds', 'Seconds')], default='day', max_length=7, null=True)),
                ('end_datetime', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField(blank=True, null=True)),
                ('end_datetime_precision', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField_Precision(blank=True, choices=[('year', 'Year'), ('month', 'Month'), ('day', 'Day'), ('seconds', 'Seconds')], default='day', max_length=7, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Quantity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DecimalField(decimal_places=17, max_digits=18)),
                ('comparator', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, choices=[('<', 'Less than'), ('<=', 'Less than or equal to'), ('>=', 'Greater than or equal to'), ('>', 'Greater than')], max_length=2, null=True)),
                ('unit', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(max_length=64)),
                ('system', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_URIField(blank=True, max_length=255, null=True)),
                ('code', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, max_length=64, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Range',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_ImagingStudy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Immunization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_ImmunizationRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Medication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_MedicationAdministration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_MedicationDispense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_MedicationRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_MedicationStatement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_NutritionOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_NutritionProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_ObservationDefinition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Practitioner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_PractitionerRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Procedure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_RelatedPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_ServiceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_SP_Meta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version_id', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_IdField(blank=True, max_length=64, null=True)),
                ('last_updated', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_InstantField(blank=True, max_length=300, null=True)),
                ('source', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_URIField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Substance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_AllergyIntolerance_Reaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('substance_cctext', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=5000, null=True)),
                ('description', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=10000, null=True)),
                ('onset', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField(blank=True, null=True)),
                ('exposureRoute_cctext', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=5000, null=True)),
                ('allergy_intolerance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reactions', to='potato.fhir_allergyintolerance')),
                ('exposureRoute_cc', models.ManyToManyField(blank=True, limit_choices_to={'codings__binding_rule': 'https://www.hl7.org/fhir/valueset-route-codes.html'}, related_name='reaction_exposure_route', to='potato.fhir_gp_coding')),
                ('severity', models.ManyToManyField(blank=True, limit_choices_to={'codings__binding_rule': 'https://www.hl7.org/fhir/valueset-reaction-event-severity.html'}, related_name='reaction_severity', to='potato.fhir_gp_coding')),
                ('substance_cc', models.ManyToManyField(limit_choices_to={'codings__binding_rule': 'https://www.hl7.org/fhir/valueset-substance-code.html'}, related_name='reaction_substance', to='potato.fhir_gp_coding')),
            ],
        ),
        migrations.AddField(
            model_name='fhir_allergyintolerance',
            name='encounter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_encounter'),
        ),
        migrations.CreateModel(
            name='FHIR_GP_AddressLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(max_length=255)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='potato.fhir_gp_address')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Binding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('binding_rule', models.CharField(blank=True, max_length=5678, null=True)),
                ('binding_codings', models.ManyToManyField(related_name='codings', to='potato.fhir_gp_coding')),
            ],
        ),
        migrations.AddField(
            model_name='fhir_allergyintolerance',
            name='category_codes',
            field=models.ManyToManyField(blank=True, limit_choices_to={'binding__binding_rule': 'https://www.hl7.org/fhir/valueset-allergy-intolerance-category.html'}, related_name='allergyintolerance_category', to='potato.fhir_gp_coding'),
        ),
        migrations.AddField(
            model_name='fhir_allergyintolerance',
            name='clinical_status_cc',
            field=models.ManyToManyField(limit_choices_to={'codings__binding_rule': 'https://www.hl7.org/fhir/valueset-allergyintolerance-clinical.html'}, related_name='allergyintolerance_clinical_status', to='potato.fhir_gp_coding'),
        ),
        migrations.AddField(
            model_name='fhir_allergyintolerance',
            name='code_cc',
            field=models.ManyToManyField(limit_choices_to={'codings__binding_rule': 'https://www.hl7.org/fhir/valueset-allergyintolerance-code.html'}, related_name='allergyintolerance_code', to='potato.fhir_gp_coding'),
        ),
        migrations.AddField(
            model_name='fhir_allergyintolerance',
            name='criticality_code',
            field=models.ForeignKey(blank=True, limit_choices_to={'binding__binding_rule': 'https://www.hl7.org/fhir/valueset-allergy-intolerance-criticality.html'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='allergyintolerance_criticality', to='potato.fhir_gp_coding'),
        ),
        migrations.AddField(
            model_name='fhir_allergyintolerance',
            name='type_cc',
            field=models.ManyToManyField(limit_choices_to={'codings__binding_rule': 'https://www.hl7.org/fhir/valueset-allergy-intolerance-type.html'}, related_name='allergyintolerance_type', to='potato.fhir_gp_coding'),
        ),
        migrations.AddField(
            model_name='fhir_allergyintolerance',
            name='verification_status_cc',
            field=models.ManyToManyField(limit_choices_to={'codings__binding_rule': 'https://www.hl7.org/fhir/valueset-allergyintolerance-verification.html'}, related_name='allergyintolerance_verification_status', to='potato.fhir_gp_coding'),
        ),
        migrations.CreateModel(
            name='FHIR_GP_HumanName_Given',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_given', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(max_length=255)),
                ('human_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='given_names', to='potato.fhir_gp_humanname')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_HumanName_Prefix',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_prefix', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(max_length=255)),
                ('human_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prefixes', to='potato.fhir_gp_humanname')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_HumanName_Suffix',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_suffix', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(max_length=255)),
                ('human_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suffixes', to='potato.fhir_gp_humanname')),
            ],
        ),
        migrations.AddField(
            model_name='fhir_gp_humanname',
            name='period',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_gp_period'),
        ),
        migrations.CreateModel(
            name='FHIR_GP_ContactPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, choices=[('phone', 'Phone'), ('fax', 'Fax'), ('email', 'Email'), ('pager', 'Pager'), ('url', 'URL'), ('sms', 'SMS'), ('other', 'Other')], max_length=20, null=True)),
                ('value', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('use', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, choices=[('home', 'Home'), ('work', 'Work'), ('temp', 'Temporary'), ('old', 'Old'), ('mobile', 'Mobile')], max_length=20, null=True)),
                ('rank', models.PositiveIntegerField(blank=True, null=True)),
                ('period', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_gp_period')),
            ],
        ),
        migrations.AddField(
            model_name='fhir_gp_address',
            name='period',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_gp_period'),
        ),
        migrations.AddField(
            model_name='fhir_allergyintolerance',
            name='onset_period',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_gp_period'),
        ),
        migrations.CreateModel(
            name='FHIR_GP_Quantity_Age',
            fields=[
                ('fhir_gp_quantity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_quantity')),
            ],
            bases=('potato.fhir_gp_quantity',),
        ),
        migrations.CreateModel(
            name='FHIR_GP_Quantity_Count',
            fields=[
                ('fhir_gp_quantity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_quantity')),
            ],
            bases=('potato.fhir_gp_quantity',),
        ),
        migrations.CreateModel(
            name='FHIR_GP_Quantity_Distance',
            fields=[
                ('fhir_gp_quantity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_quantity')),
            ],
            bases=('potato.fhir_gp_quantity',),
        ),
        migrations.CreateModel(
            name='FHIR_GP_Quantity_Duration',
            fields=[
                ('fhir_gp_quantity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_quantity')),
            ],
            bases=('potato.fhir_gp_quantity',),
        ),
        migrations.CreateModel(
            name='FHIR_GP_Quantity_Money',
            fields=[
                ('fhir_gp_quantity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_quantity')),
            ],
            bases=('potato.fhir_gp_quantity',),
        ),
        migrations.CreateModel(
            name='FHIR_GP_Quantity_Simple',
            fields=[
                ('fhir_gp_quantity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_quantity')),
            ],
            bases=('potato.fhir_gp_quantity',),
        ),
        migrations.AddField(
            model_name='fhir_allergyintolerance',
            name='onset_range',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_gp_range'),
        ),
        migrations.CreateModel(
            name='FHIR_GP_Timing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_text', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=50, null=True)),
                ('repeat_count', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_PositiveIntField(blank=True, null=True)),
                ('repeat_countMax', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_PositiveIntField(blank=True, null=True)),
                ('repeat_duration', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DecimalField(blank=True, decimal_places=17, max_digits=18, null=True)),
                ('repeat_durationMax', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DecimalField(blank=True, decimal_places=17, max_digits=18, null=True)),
                ('repeat_duration_unit', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, choices=[('s', 'Second'), ('min', 'Minute'), ('h', 'Hour'), ('d', 'Day'), ('wk', 'Week'), ('mo', 'Month')], max_length=20, null=True)),
                ('repeat_frequency', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_PositiveIntField(blank=True, null=True)),
                ('repeat_frequencyMmax', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_PositiveIntField(blank=True, null=True)),
                ('repeat_period', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DecimalField(blank=True, decimal_places=17, max_digits=18, null=True)),
                ('repeat_periodMax', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DecimalField(blank=True, decimal_places=17, max_digits=18, null=True)),
                ('repeat_periodUnit', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, choices=[('s', 'Second'), ('min', 'Minute'), ('h', 'Hour'), ('d', 'Day'), ('wk', 'Week'), ('mo', 'Month')], max_length=20, null=True)),
                ('repeat_offset', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_UnsignedIntField(blank=True, null=True)),
                ('code_cc', models.ManyToManyField(limit_choices_to={'codings__binding_rule': 'https://www.hl7.org/fhir/valueset-timing-abbreviation.html'}, to='potato.fhir_gp_coding')),
                ('repeat_bounds_period', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_gp_period')),
                ('repeat_bounds_range', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_gp_range')),
                ('repeat_bounds_duration', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_gp_quantity_duration')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Timing_Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField(blank=True, null=True)),
                ('timing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='potato.fhir_gp_timing')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Timing_repeat_dayOfWeek',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dayOfWeek', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, choices=[('sun', 'Sunday'), ('mon', 'Monday'), ('tue', 'Tuesday'), ('wed', 'Wednesday'), ('thu', 'Thursday'), ('fri', 'Friday'), ('sat', 'Saturday')], max_length=20, null=True)),
                ('timing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repeat_dayOfWeek', to='potato.fhir_gp_timing')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Timing_repeat_timeOfDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timeOfDay', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_TimeField(blank=True, null=True)),
                ('timing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repeat_timeOfDay', to='potato.fhir_gp_timing')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Timing_repeat_when',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('when', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, choices=[('MORN', 'Morning'), ('MORN.early', 'Early Morning'), ('MORN.late', 'Late Morning'), ('NOON', 'Noon'), ('AFT', 'Afternoon'), ('AFT.early', 'Early Afternoon'), ('AFT.late', 'Late Afternoon'), ('EVE', 'Evening'), ('EVE.early', 'Early Evening'), ('EVE.late', 'Late Evening'), ('NIGHT', 'Night'), ('PHS', 'After Sleep'), ('IMD', 'Immediate'), ('HS', 'Prior to Sleep'), ('WAKE', 'Upon Waking'), ('C', 'Meal'), ('CM', 'Breakfast'), ('CD', 'Lunch'), ('CV', 'Dinner'), ('AC', 'Before Meal'), ('ACM', 'Before Breakfast'), ('ACD', 'Before Lunch'), ('ACV', 'Before Dinner'), ('PC', 'After Meal'), ('PCM', 'After Breakfast'), ('PCD', 'After Lunch'), ('PCV', 'After Dinner')], max_length=20, null=True)),
                ('timing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repeat_when', to='potato.fhir_gp_timing')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Observation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instantiates_canonical', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CanonicalField(blank=True, max_length=1000, null=True)),
                ('status', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(choices=[('registered', 'Registered'), ('preliminary', 'Preliminary'), ('final', 'Final'), ('amended', 'Amended'), ('corrected', 'Corrected'), ('cancelled', 'Cancelled'), ('entered-in-error', 'Entered in Error'), ('unknown', 'Unknown')], default='unknown', max_length=20)),
                ('basedOn_carePlan', models.ManyToManyField(blank=True, related_name='observation_basedOn_carePlans', to='potato.fhir_careplan')),
                ('basedOn_deviceRequest', models.ManyToManyField(blank=True, related_name='observation_basedOn_deviceRequests', to='potato.fhir_devicerequest')),
                ('basedOn_immunizationRecommendation', models.ManyToManyField(blank=True, related_name='observation_basedOn_immunizationRecommendations', to='potato.fhir_immunizationrecommendation')),
                ('basedOn_medicationRequest', models.ManyToManyField(blank=True, related_name='observation_basedOn_medicationRequests', to='potato.fhir_medicationrequest')),
                ('basedOn_nutritionOrder', models.ManyToManyField(blank=True, related_name='observation_basedOn_nutritionOrders', to='potato.fhir_nutritionorder')),
                ('instantiates_reference', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_instantiates_reference', to='potato.fhir_observationdefinition')),
                ('basedOn_serviceRequest', models.ManyToManyField(blank=True, related_name='observation_basedOn_serviceRequests', to='potato.fhir_servicerequest')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_AllergyIntolerance_Reaction_Manifestation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manifestation_cctext', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=5000, null=True)),
                ('reaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manifestations', to='potato.fhir_allergyintolerance_reaction')),
                ('manifestation_cc', models.ManyToManyField(blank=True, limit_choices_to={'codings__binding_rule': 'https://www.hl7.org/fhir/valueset-clinical-findings.html'}, to='potato.fhir_gp_coding')),
                ('manifestation_ref', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_observation')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Identifier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('use', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, choices=[('usual', 'Usual'), ('official', 'Official'), ('temp', 'Temporary'), ('secondary', 'Secondary'), ('old', 'Old')], max_length=16, null=True)),
                ('type_cctext', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('system', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_URIField(blank=True, max_length=1024, null=True)),
                ('value', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=1024, null=True)),
                ('type_cc', models.ManyToManyField(limit_choices_to={'codings__binding_rule': 'https://www.hl7.org/fhir/valueset-identifier-type.html'}, to='potato.fhir_gp_coding')),
                ('period', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='identifier_period', to='potato.fhir_gp_period')),
                ('assigner_foreignKey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='identifier_assigner', to='potato.fhir_organization')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_BooleanField(help_text="Whether this patient's record is in active use", null=True)),
                ('gender', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other'), ('unknown', 'Unknown')], max_length=10, null=True)),
                ('birthDate_date', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateField(blank=True, null=True)),
                ('birthDate_date_precision', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateField_Precision(blank=True, choices=[('year', 'Year'), ('month', 'Month'), ('day', 'Day')], default='day', max_length=5, null=True)),
                ('deceased_boolean', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_BooleanField(help_text='Indicates if the individual is deceased', null=True)),
                ('deceased_date_time', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField(null=True)),
                ('marital_status_cctext', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('multiple_birth_boolean', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_BooleanField(null=True)),
                ('multiple_birth_integer', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_PositiveIntField(blank=True, null=True)),
                ('generalPractitioners_organization', models.ManyToManyField(related_name='patient_generalPractitioner_organization', to='potato.fhir_organization')),
                ('managing_organization_foreignKey', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='patient_managingOrganization_organization', to='potato.fhir_organization')),
            ],
        ),
        migrations.AddField(
            model_name='fhir_allergyintolerance',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_patient'),
        ),
        migrations.CreateModel(
            name='FHIR_Patient_Communication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferred', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_BooleanField()),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_communications', to='potato.fhir_patient')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Patient_Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other'), ('unknown', 'Unknown')], help_text='male | female | other | unknown', max_length=10, null=True)),
                ('address', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='patient_contact_address', to='potato.fhir_gp_address')),
                ('name', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='patient_contact_name', to='potato.fhir_gp_humanname')),
                ('organization_foreigkey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_contact_organization', to='potato.fhir_organization')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_contacts', to='potato.fhir_patient')),
                ('period', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_gp_period')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Patient_Contact_Relationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_contact_relationships', to='potato.fhir_patient_contact')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Patient_Link',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link_type', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(choices=[('replaced-by', 'Replaced by'), ('replaces', 'Replaces'), ('refer', 'Refer'), ('seealso', 'See also')], max_length=20)),
                ('from_patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_patient_links', to='potato.fhir_patient')),
                ('to_patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_patient_links', to='potato.fhir_patient')),
                ('other_related_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='link_other_relatedPerson', to='potato.fhir_relatedperson')),
            ],
        ),
        migrations.AddField(
            model_name='fhir_patient',
            name='link',
            field=models.ManyToManyField(related_name='patient_links', through='potato.FHIR_Patient_Link', to='potato.fhir_patient'),
        ),
        migrations.AddField(
            model_name='fhir_patient',
            name='generalPractitioners_practitioner',
            field=models.ManyToManyField(related_name='patient_generalPractitioner_practitioner', to='potato.fhir_practitioner'),
        ),
        migrations.AddField(
            model_name='fhir_patient',
            name='generalPractitioners_practitionerRole',
            field=models.ManyToManyField(related_name='patient_generalPractitioner_practitionerRole', to='potato.fhir_practitionerrole'),
        ),
        migrations.CreateModel(
            name='FHIR_GP_Signature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('when', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_InstantField(blank=True, max_length=99999, null=True)),
                ('targetFormat', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, max_length=255, null=True)),
                ('sigFormat', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, max_length=255, null=True)),
                ('data', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_Base64BinaryField(blank=True, null=True)),
                ('onBehalfOf_device_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='onBehalfOf_device', to='potato.fhir_device')),
                ('type', models.ManyToManyField(blank=True, related_name='types', to='potato.fhir_gp_coding')),
                ('who_device_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='who_device', to='potato.fhir_device')),
                ('onBehalfOf_organization_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='onBehalfOf_organization', to='potato.fhir_organization')),
                ('who_organization_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='who_organization', to='potato.fhir_organization')),
                ('onBehalfOf_patient_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='onBehalfOf_patient', to='potato.fhir_patient')),
                ('who_patient_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='who_patient', to='potato.fhir_patient')),
                ('onBehalfOf_practitioner_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='onBehalfOf_practitioner', to='potato.fhir_practitioner')),
                ('who_practitioner_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='who_practitioner', to='potato.fhir_practitioner')),
                ('onBehalfOf_relatedPerson_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='onBehalfOf_relatedPerson', to='potato.fhir_relatedperson')),
                ('who_relatedPerson_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='who_relatedPerson', to='potato.fhir_relatedperson')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Annotation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_string', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('time_datetime', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField(blank=True, null=True)),
                ('time_datetime_precision', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField_Precision(blank=True, choices=[('year', 'Year'), ('month', 'Month'), ('day', 'Day'), ('seconds', 'Seconds')], default='day', max_length=7, null=True)),
                ('text', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_MarkdownField(max_length=99999)),
                ('author_organization_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='author_organization', to='potato.fhir_organization')),
                ('author_patient_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='author_patient', to='potato.fhir_patient')),
                ('author_practitioner_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='author_practitioner', to='potato.fhir_practitioner')),
                ('author_practitionerRole_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='author_practitionerRole', to='potato.fhir_practitionerrole')),
                ('author_relatedPerson_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='author_relatedPerson', to='potato.fhir_relatedperson')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_AllergyIntolerance_Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('function_cctext', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=5000, null=True)),
                ('allergy_intolerance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_allergyintolerance')),
                ('actor_careTeam', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_careteam')),
                ('actor_device', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_device')),
                ('function_cc', models.ManyToManyField(limit_choices_to={'codings__binding_rule': 'https://www.hl7.org/fhir/valueset-participation-role-type.html'}, to='potato.fhir_gp_coding')),
                ('actor_organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_organization')),
                ('actor_patient', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_patient')),
                ('actor_practitioner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_practitioner')),
                ('actor_practitionerRole', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_practitionerrole')),
                ('actor_relatedPerson', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_relatedperson')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_SP_Meta_Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CanonicalField(max_length=255)),
                ('meta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profiles', to='potato.fhir_sp_meta')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_SP_Meta_Security',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(max_length=99999)),
                ('meta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='securitys', to='potato.fhir_sp_meta')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_SP_Meta_Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(max_length=255)),
                ('meta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='potato.fhir_sp_meta')),
            ],
        ),
        migrations.CreateModel(
            name='TriggeredByThrough',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(choices=[('reflex', 'Reflex'), ('repeat', 'Repeat'), ('re-run', 'Re-run')], max_length=7)),
                ('reason', models.CharField(blank=True, max_length=255, null=True)),
                ('status', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(choices=[('registered', 'Registered'), ('preliminary', 'Preliminary'), ('final', 'Final'), ('amended', 'Amended'), ('corrected', 'Corrected'), ('cancelled', 'Cancelled'), ('entered-in-error', 'Entered in Error'), ('unknown', 'Unknown')], default='unknown', max_length=20)),
                ('effective_dateTime', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField(blank=True, null=True)),
                ('effective_string', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('effective_period', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_effective_period', to='potato.fhir_gp_period')),
                ('effective_timing', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_effective_timing', to='potato.fhir_gp_timing')),
                ('encounter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_encounter', to='potato.fhir_encounter')),
                ('from_Observation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='observation', to='potato.fhir_observation')),
                ('partOf_genomicStudy', models.ManyToManyField(blank=True, related_name='observation_partOf_genomicStudies', to='potato.fhir_genomicstudy')),
                ('partOf_imagingStudy', models.ManyToManyField(blank=True, related_name='observation_partOf_imagingStudies', to='potato.fhir_imagingstudy')),
                ('partOf_immunization', models.ManyToManyField(blank=True, related_name='observation_partOf_immunizations', to='potato.fhir_immunization')),
                ('partOf_medicationAdministration', models.ManyToManyField(blank=True, related_name='observation_partOf_medicationAdministrations', to='potato.fhir_medicationadministration')),
                ('partOf_medicationDispense', models.ManyToManyField(blank=True, related_name='observation_partOf_medicationDispensers', to='potato.fhir_medicationdispense')),
                ('partOf_medicationStatement', models.ManyToManyField(blank=True, related_name='observation_partOf_medicationStatements', to='potato.fhir_medicationstatement')),
                ('partOf_procedure', models.ManyToManyField(blank=True, related_name='observation_partOf_procedures', to='potato.fhir_procedure')),
                ('subject_biologicallyDerivedProduct', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_subject_biologicallyDerivedProduct', to='potato.fhir_biologicallyderivedproduct')),
                ('subject_device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_subject_device', to='potato.fhir_device')),
                ('subject_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_subject_group', to='potato.fhir_group')),
                ('subject_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_subject_location', to='potato.fhir_location')),
                ('subject_medication', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_subject_medication', to='potato.fhir_medication')),
                ('subject_nutritionProduct', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_subject_nutritionProduct', to='potato.fhir_nutritionproduct')),
                ('subject_organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_subject_organization', to='potato.fhir_organization')),
                ('subject_patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_subject_patient', to='potato.fhir_patient')),
                ('subject_practitioner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_subject_practitioner', to='potato.fhir_practitioner')),
                ('subject_practitionerRole', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_subject_practitionerRole', to='potato.fhir_practitionerrole')),
                ('subject_procedure', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_subject_procedure', to='potato.fhir_procedure')),
                ('subject_relatedPerson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_subject_relatedPerson', to='potato.fhir_relatedperson')),
                ('subject_substance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_subject_substance', to='potato.fhir_substance')),
                ('toTriggeredBy_Observation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='observation_triggeredBy', to='potato.fhir_observation')),
            ],
        ),
        migrations.AddField(
            model_name='fhir_observation',
            name='triggeredBy',
            field=models.ManyToManyField(related_name='triggeredBys', through='potato.TriggeredByThrough', to='potato.fhir_observation'),
        ),
        migrations.CreateModel(
            name='FHIR_AllergyIntolerance_Identifier',
            fields=[
                ('fhir_gp_identifier_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_identifier')),
                ('allergy_intolerance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='identifiers', to='potato.fhir_allergyintolerance')),
            ],
            bases=('potato.fhir_gp_identifier',),
        ),
        migrations.CreateModel(
            name='FHIR_Observation_Identifier',
            fields=[
                ('fhir_gp_identifier_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_identifier')),
                ('observation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='observation_identifiers', to='potato.fhir_observation')),
            ],
            bases=('potato.fhir_gp_identifier',),
        ),
        migrations.CreateModel(
            name='FHIR_Patient_Identifier',
            fields=[
                ('fhir_gp_identifier_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_identifier')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_identifiers', to='potato.fhir_patient')),
            ],
            bases=('potato.fhir_gp_identifier',),
        ),
        migrations.CreateModel(
            name='FHIR_RelatedPerson_Identifier',
            fields=[
                ('fhir_gp_identifier_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_identifier')),
                ('relatedPerson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='RelatedPerson_identifiers', to='potato.fhir_relatedperson')),
            ],
            bases=('potato.fhir_gp_identifier',),
        ),
        migrations.CreateModel(
            name='FHIR_AllergyIntolerance_Note',
            fields=[
                ('fhir_gp_annotation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_annotation')),
                ('allergy_intolerance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='potato.fhir_allergyintolerance')),
            ],
            bases=('potato.fhir_gp_annotation',),
        ),
        migrations.CreateModel(
            name='FHIR_AllergyIntolerance_Reaction_Note',
            fields=[
                ('fhir_gp_annotation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_annotation')),
                ('reaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reaction_notes', to='potato.fhir_allergyintolerance_reaction')),
            ],
            bases=('potato.fhir_gp_annotation',),
        ),
        migrations.CreateModel(
            name='FHIR_Patient_Address',
            fields=[
                ('fhir_gp_address_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_address')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_addresses', to='potato.fhir_patient')),
            ],
            bases=('potato.fhir_gp_address',),
        ),
        migrations.CreateModel(
            name='FHIR_Patient_Photo',
            fields=[
                ('fhir_gp_attachment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_attachment')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_photos', to='potato.fhir_patient')),
            ],
            bases=('potato.fhir_gp_attachment',),
        ),
        migrations.CreateModel(
            name='FHIR_Patient_Contact_Telecom',
            fields=[
                ('fhir_gp_contactpoint_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_contactpoint')),
                ('patient_contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_contact_telecoms', to='potato.fhir_patient_contact')),
            ],
            bases=('potato.fhir_gp_contactpoint',),
        ),
        migrations.CreateModel(
            name='FHIR_Patient_Telecom',
            fields=[
                ('fhir_gp_contactpoint_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_contactpoint')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_telecoms', to='potato.fhir_patient')),
            ],
            bases=('potato.fhir_gp_contactpoint',),
        ),
        migrations.CreateModel(
            name='FHIR_Patient_Name',
            fields=[
                ('fhir_gp_humanname_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_humanname')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_names', to='potato.fhir_patient')),
            ],
            bases=('potato.fhir_gp_humanname',),
        ),
        migrations.AddField(
            model_name='fhir_allergyintolerance',
            name='onset_age',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_gp_quantity_age'),
        ),
        migrations.CreateModel(
            name='FHIR_GP_SampledData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interval', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DecimalField(blank=True, decimal_places=17, max_digits=18, null=True)),
                ('intervalUnit', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(max_length=64)),
                ('factor', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DecimalField(blank=True, decimal_places=17, max_digits=18, null=True)),
                ('lowerLimit', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DecimalField(blank=True, decimal_places=17, max_digits=18, null=True)),
                ('upperLimit', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DecimalField(blank=True, decimal_places=17, max_digits=18, null=True)),
                ('dimensions', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_PositiveIntField()),
                ('codeMap', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CanonicalField(blank=True, max_length=256, null=True)),
                ('offsets', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=1024, null=True)),
                ('data', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=1024, null=True)),
                ('origin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sampleddata_origin', to='potato.fhir_gp_quantity_simple')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_RatioRange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('denominator', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ratio_range_denominator', to='potato.fhir_gp_quantity_simple')),
                ('numerator_high', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ratio_range_numerator_high', to='potato.fhir_gp_quantity_simple')),
                ('numerator_low', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ratio_range_numerator_low', to='potato.fhir_gp_quantity_simple')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Ratio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numerator', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ratio_numerator', to='potato.fhir_gp_quantity')),
                ('denominator', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ratio_denominator', to='potato.fhir_gp_quantity_simple')),
            ],
        ),
        migrations.AddField(
            model_name='fhir_gp_range',
            name='high',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='range_high', to='potato.fhir_gp_quantity_simple'),
        ),
        migrations.AddField(
            model_name='fhir_gp_range',
            name='low',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='range_low', to='potato.fhir_gp_quantity_simple'),
        ),
    ]
