# Generated by Django 5.2 on 2025-04-15 01:38

import django.db.models.deletion
import potato.models_dir.FHIR_DataTypes.FHIR_primitive
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FHIR_Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_AllergyIntolerance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clinical_status_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=5000, null=True)),
                ('verification_status_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=5000, null=True)),
                ('type_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=5000, null=True)),
                ('code_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=5000, null=True)),
                ('onset_dateTime', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField(blank=True, null=True)),
                ('onset_string', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('recordedDate', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField(blank=True, null=True)),
                ('lastReactionOccurrence', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Availability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Binary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_BiologicallyDerivedProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_CarePlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_CareTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_ClaimResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Communication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Condition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Coverage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_DeviceDefinition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_DeviceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_DiagnosticReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_DocumentReference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Encounter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Endpoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_ExtendedContactDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GenomicStudy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('use', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, choices=[('home', 'Home'), ('work', 'Work'), ('temp', 'Temporary'), ('old', 'Old'), ('billing', 'Billing')], max_length=20, null=True)),
                ('type', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, choices=[('postal', 'Postal'), ('physical', 'Physical'), ('both', 'Both')], max_length=20, null=True)),
                ('text', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('city', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('district', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('state', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('postalCode', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=20, null=True)),
                ('country', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=3, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Attachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contentType', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(max_length=256)),
                ('language', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(max_length=10)),
                ('data', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_Base64BinaryField()),
                ('url', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_URLField(max_length=1024)),
                ('size', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_SignedInt64Field()),
                ('hash', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_Base64BinaryField()),
                ('title', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(max_length=256)),
                ('time_datetime', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField(blank=True, null=True)),
                ('time_datetime_precision', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField_Precision(blank=True, choices=[('year', 'Year'), ('month', 'Month'), ('day', 'Day'), ('seconds', 'Seconds')], default='day', max_length=7, null=True)),
                ('height', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_PositiveIntField(blank=True, null=True)),
                ('width', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_PositiveIntField(blank=True, null=True)),
                ('frames', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_PositiveIntField(blank=True, null=True)),
                ('duration', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('pages', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_PositiveIntField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Coding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_URIField(max_length=1024)),
                ('version', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=256, null=True)),
                ('code', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, max_length=1024, null=True)),
                ('display', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=256, null=True)),
                ('userSelected', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_HumanName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('use', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, choices=[('usual', 'Usual'), ('official', 'Official'), ('temp', 'Temporary'), ('nickname', 'Nickname'), ('anonymous', 'Anonymous'), ('old', 'Old'), ('maiden', 'Maiden')], max_length=20, null=True)),
                ('text', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('family', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Money',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DecimalField(blank=True, decimal_places=17, max_digits=18, null=True)),
                ('currency', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, help_text='ISO 4217 currency code (e.g., USD, EUR).', max_length=3, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Period',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_datetime', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField(blank=True, null=True)),
                ('start_datetime_precision', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField_Precision(blank=True, choices=[('year', 'Year'), ('month', 'Month'), ('day', 'Day'), ('seconds', 'Seconds')], default='day', max_length=7, null=True)),
                ('end_datetime', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField(blank=True, null=True)),
                ('end_datetime_precision', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField_Precision(blank=True, choices=[('year', 'Year'), ('month', 'Month'), ('day', 'Day'), ('seconds', 'Seconds')], default='day', max_length=7, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Quantity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DecimalField(decimal_places=17, max_digits=18)),
                ('comparator', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, choices=[('<', 'Less than'), ('<=', 'Less than or equal to'), ('>=', 'Greater than or equal to'), ('>', 'Greater than')], max_length=2, null=True)),
                ('unit', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(max_length=64)),
                ('system', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_URIField(blank=True, max_length=255, null=True)),
                ('code', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, max_length=64, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Range',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_HealthcareService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_ImagingStudy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Immunization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_ImmunizationRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Medication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_MedicationAdministration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_MedicationDispense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_SP_Dosage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_MedicationStatement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_NutritionOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_NutritionProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_ObservationDefinition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Practitioner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_BooleanField(blank=True, null=True)),
                ('gender', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other'), ('unknown', 'Unknown')], max_length=10, null=True)),
                ('birthDate', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateField(blank=True, null=True)),
                ('deceasedBoolean', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_BooleanField(blank=True, null=True)),
                ('deceasedDateTime', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Procedure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Provenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_RelatedPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_RequestOrchestration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_ServiceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Slot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_SP_Meta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version_id', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_IdField(blank=True, max_length=64, null=True)),
                ('last_updated', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_InstantField(blank=True, max_length=300, null=True)),
                ('source', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_URIField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Substance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_VirtualServiceDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_VisionPrescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_AllergyIntolerance_Reaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('substance_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=5000, null=True)),
                ('description', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=10000, null=True)),
                ('onset', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField(blank=True, null=True)),
                ('exposureRoute_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=5000, null=True)),
                ('allergy_intolerance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reactions', to='potato.fhir_allergyintolerance')),
                ('exposureRoute_cc', models.ManyToManyField(blank=True, limit_choices_to={'codings__binding_rule': 'https://www.hl7.org/fhir/valueset-route-codes.html'}, related_name='reaction_exposure_route', to='potato.fhir_gp_coding')),
                ('severity', models.ForeignKey(blank=True, limit_choices_to={'codings__binding_rule': 'https://www.hl7.org/fhir/valueset-reaction-event-severity.html'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reaction_severity', to='potato.fhir_gp_coding')),
                ('substance_cc', models.ManyToManyField(limit_choices_to={'codings__binding_rule': 'https://www.hl7.org/fhir/valueset-substance-code.html'}, related_name='reaction_substance', to='potato.fhir_gp_coding')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(choices=[('proposed', 'Proposed'), ('pending', 'Pending'), ('booked', 'Booked'), ('arrived', 'Arrived'), ('fulfilled', 'Fulfilled'), ('cancelled', 'Cancelled'), ('noshow', 'No Show'), ('entered-in-error', 'Entered in Error'), ('checked-in', 'Checked In'), ('waitlist', 'Waitlist')], max_length=16, null=True)),
                ('cancellationReason_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('appointmentType_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('priority_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('description', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=1024, null=True)),
                ('start', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_InstantField(blank=True, max_length=64, null=True)),
                ('end', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_InstantField(blank=True, max_length=64, null=True)),
                ('minutesDuration', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_PositiveIntField(blank=True, null=True)),
                ('created', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField(blank=True, null=True)),
                ('cancellationDate', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField(blank=True, null=True)),
                ('recurrenceId', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_PositiveIntField(blank=True, null=True)),
                ('occurrenceChanged', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_BooleanField(blank=True, null=True)),
                ('originatingAppointment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='originating_appointment', to='potato.fhir_appointment')),
                ('previousAppointment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='previous_appointment', to='potato.fhir_appointment')),
                ('replaces', models.ManyToManyField(blank=True, to='potato.fhir_appointment')),
                ('appointmentType_cc', models.ManyToManyField(limit_choices_to={'codings__binding_rule': '??'}, related_name='appointment_appointmentType', to='potato.fhir_gp_coding')),
                ('cancellationReason_cc', models.ManyToManyField(limit_choices_to={'codings__binding_rule': 'https://www.hl7.org/fhir/valueset-appointment-cancellation-reason.html'}, related_name='appointment_cancellationReason', to='potato.fhir_gp_coding')),
                ('priority_cc', models.ManyToManyField(limit_choices_to={'codings__binding_rule': 'https://www.hl7.org/fhir/valueset-appointment-priority.html'}, related_name='appointment_priority', to='potato.fhir_gp_coding')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Appointment_Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('required', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_BooleanField(blank=True, null=True)),
                ('status', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField()),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_participant', to='potato.fhir_appointment')),
                ('actor_care_team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_careteam')),
                ('actor_device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_device')),
                ('period', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_gp_period')),
                ('actor_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_group')),
                ('actor_healthcare_service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_healthcareservice')),
                ('actor_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_location')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Appointment_RecurrenceTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timezone_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('recurrenceType_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('lastOccurrenceDate', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateField(blank=True, null=True)),
                ('occurrenceCount', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_PositiveIntField(blank=True, null=True)),
                ('monday', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_BooleanField(blank=True, null=True)),
                ('tuesday', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_BooleanField(blank=True, null=True)),
                ('wednesday', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_BooleanField(blank=True, null=True)),
                ('thursday', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_BooleanField(blank=True, null=True)),
                ('friday', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_BooleanField(blank=True, null=True)),
                ('saturday', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_BooleanField(blank=True, null=True)),
                ('sunday', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_BooleanField(blank=True, null=True)),
                ('weekInterval', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_PositiveIntField(blank=True, null=True)),
                ('dayOfMonth', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_PositiveIntField(blank=True, null=True)),
                ('monthInterval', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_PositiveIntField(blank=True, null=True)),
                ('yearInterval', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_PositiveIntField(blank=True, null=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_recurrence_templates', to='potato.fhir_appointment')),
                ('dayOfWeek', models.ForeignKey(blank=True, limit_choices_to={'codings__binding_rule': 'Days Of Week'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='day_of_week', to='potato.fhir_gp_coding')),
                ('nthWeekOfMonth', models.ForeignKey(blank=True, limit_choices_to={'codings__binding_rule': 'Week Of Month'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='nth_week_of_month', to='potato.fhir_gp_coding')),
                ('recurrenceType_cc', models.ManyToManyField(limit_choices_to={'codings__binding_rule': 'Appointment Recurrence Type'}, related_name='recurrence_template_recurrence_type', to='potato.fhir_gp_coding')),
                ('timezone_cc', models.ManyToManyField(blank=True, limit_choices_to={'codings__binding_rule': 'IANA Timezones'}, related_name='recurrence_template_timezone', to='potato.fhir_gp_coding')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Appointment_RecurrenceTemplate_ExcludingDate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('excludingDate', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateField(blank=True, null=True)),
                ('Appointment_RecurrenceTemplate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_recurrence_template_excludingDate', to='potato.fhir_appointment_recurrencetemplate')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Appointment_RecurrenceTemplate_ExcludingRecurrenceId',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('excludingRecurrenceId', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_PositiveIntField(blank=True, null=True)),
                ('Appointment_RecurrenceTemplate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_recurrence_template_excludingRecurrenceId', to='potato.fhir_appointment_recurrencetemplate')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Appointment_RecurrenceTemplate_OccurrenceDate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('occurrenceDate', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateField(blank=True, null=True)),
                ('Appointment_RecurrenceTemplate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_recurrence_template_occurrenceDate', to='potato.fhir_appointment_recurrencetemplate')),
            ],
        ),
        migrations.AddField(
            model_name='fhir_allergyintolerance',
            name='encounter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_encounter'),
        ),
        migrations.CreateModel(
            name='FHIR_GP_AddressLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(max_length=255)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='potato.fhir_gp_address')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Binding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('binding_rule', models.CharField(blank=True, max_length=5678, null=True)),
                ('binding_codings', models.ManyToManyField(related_name='codings', to='potato.fhir_gp_coding')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Appointment_VirtualService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('virtualService_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_virtualService', to='potato.fhir_appointment')),
                ('virtualService_cc', models.ManyToManyField(limit_choices_to={'codings__binding_rule': '??'}, to='potato.fhir_gp_coding')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Appointment_Specialty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specialty_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_specialty', to='potato.fhir_appointment')),
                ('specialty_cc', models.ManyToManyField(limit_choices_to={'codings__binding_rule': '??'}, to='potato.fhir_gp_coding')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Appointment_Slot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slot_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_slot', to='potato.fhir_appointment')),
                ('slot_cc', models.ManyToManyField(limit_choices_to={'codings__binding_rule': '??'}, to='potato.fhir_gp_coding')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Appointment_ServiceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serviceCategory_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_ServiceCategorys', to='potato.fhir_appointment')),
                ('serviceCategory_cc', models.ManyToManyField(limit_choices_to={'codings__binding_rule': '??'}, to='potato.fhir_gp_coding')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Appointment_PatientInstruction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instruction_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_patientInstruction', to='potato.fhir_appointment')),
                ('instruction_binary', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='instruction_binaries', to='potato.fhir_binary')),
                ('instruction_communication', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='instruction_communications', to='potato.fhir_communication')),
                ('instruction_documentReference', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='instruction_document_references', to='potato.fhir_documentreference')),
                ('instruction_cc', models.ManyToManyField(limit_choices_to={'codings__binding_rule': '??'}, to='potato.fhir_gp_coding')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Appointment_Participant_Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('appointment_participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_participant_type', to='potato.fhir_appointment_participant')),
                ('type_cc', models.ManyToManyField(limit_choices_to={'codings__binding_rule': '??'}, to='potato.fhir_gp_coding')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Appointment_Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_classes', to='potato.fhir_appointment')),
                ('class_cc', models.ManyToManyField(limit_choices_to={'codings__binding_rule': '??'}, to='potato.fhir_gp_coding')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Appointment_Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_account', to='potato.fhir_appointment')),
                ('account_cc', models.ManyToManyField(limit_choices_to={'codings__binding_rule': '??'}, to='potato.fhir_gp_coding')),
            ],
        ),
        migrations.AddField(
            model_name='fhir_allergyintolerance',
            name='category_codes',
            field=models.ManyToManyField(blank=True, limit_choices_to={'codings__binding_rule': 'https://www.hl7.org/fhir/valueset-allergy-intolerance-category.html'}, related_name='allergyintolerance_category', to='potato.fhir_gp_coding'),
        ),
        migrations.AddField(
            model_name='fhir_allergyintolerance',
            name='clinical_status_cc',
            field=models.ManyToManyField(limit_choices_to={'codings__binding_rule': 'https://www.hl7.org/fhir/valueset-allergyintolerance-clinical.html'}, related_name='allergyintolerance_clinical_status', to='potato.fhir_gp_coding'),
        ),
        migrations.AddField(
            model_name='fhir_allergyintolerance',
            name='code_cc',
            field=models.ManyToManyField(limit_choices_to={'codings__binding_rule': 'https://www.hl7.org/fhir/valueset-allergyintolerance-code.html'}, related_name='allergyintolerance_code', to='potato.fhir_gp_coding'),
        ),
        migrations.AddField(
            model_name='fhir_allergyintolerance',
            name='criticality_code',
            field=models.ForeignKey(blank=True, limit_choices_to={'codings__binding_rule': 'https://www.hl7.org/fhir/valueset-allergy-intolerance-criticality.html'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='allergyintolerance_criticality', to='potato.fhir_gp_coding'),
        ),
        migrations.AddField(
            model_name='fhir_allergyintolerance',
            name='type_cc',
            field=models.ManyToManyField(limit_choices_to={'codings__binding_rule': 'https://www.hl7.org/fhir/valueset-allergy-intolerance-type.html'}, related_name='allergyintolerance_type', to='potato.fhir_gp_coding'),
        ),
        migrations.AddField(
            model_name='fhir_allergyintolerance',
            name='verification_status_cc',
            field=models.ManyToManyField(limit_choices_to={'codings__binding_rule': 'https://www.hl7.org/fhir/valueset-allergyintolerance-verification.html'}, related_name='allergyintolerance_verification_status', to='potato.fhir_gp_coding'),
        ),
        migrations.CreateModel(
            name='FHIR_GP_HumanName_Given',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_given', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(max_length=255)),
                ('human_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='given_names', to='potato.fhir_gp_humanname')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_HumanName_Prefix',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_prefix', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(max_length=255)),
                ('human_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prefixes', to='potato.fhir_gp_humanname')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_HumanName_Suffix',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_suffix', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(max_length=255)),
                ('human_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suffixes', to='potato.fhir_gp_humanname')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Identifier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('use', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, choices=[('usual', 'Usual'), ('official', 'Official'), ('temp', 'Temporary'), ('secondary', 'Secondary'), ('old', 'Old')], max_length=16, null=True)),
                ('type_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('system', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_URIField(blank=True, max_length=1024, null=True)),
                ('value', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=1024, null=True)),
                ('type_cc', models.ManyToManyField(limit_choices_to={'codings__binding_rule': 'https://www.hl7.org/fhir/valueset-identifier-type.html'}, to='potato.fhir_gp_coding')),
                ('period', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='identifier_period', to='potato.fhir_gp_period')),
                ('assigner_foreignKey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='identifier_assigner', to='potato.fhir_organization')),
            ],
        ),
        migrations.AddField(
            model_name='fhir_gp_humanname',
            name='period',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_gp_period'),
        ),
        migrations.CreateModel(
            name='FHIR_GP_ContactPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, choices=[('phone', 'Phone'), ('fax', 'Fax'), ('email', 'Email'), ('pager', 'Pager'), ('url', 'URL'), ('sms', 'SMS'), ('other', 'Other')], max_length=20, null=True)),
                ('value', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('use', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, choices=[('home', 'Home'), ('work', 'Work'), ('temp', 'Temporary'), ('old', 'Old'), ('mobile', 'Mobile')], max_length=20, null=True)),
                ('rank', models.PositiveIntegerField(blank=True, null=True)),
                ('period', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_gp_period')),
            ],
        ),
        migrations.AddField(
            model_name='fhir_gp_address',
            name='period',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_gp_period'),
        ),
        migrations.AddField(
            model_name='fhir_allergyintolerance',
            name='onset_period',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_gp_period'),
        ),
        migrations.CreateModel(
            name='FHIR_GP_Quantity_Age',
            fields=[
                ('fhir_gp_quantity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_quantity')),
            ],
            bases=('potato.fhir_gp_quantity',),
        ),
        migrations.CreateModel(
            name='FHIR_GP_Quantity_Count',
            fields=[
                ('fhir_gp_quantity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_quantity')),
            ],
            bases=('potato.fhir_gp_quantity',),
        ),
        migrations.CreateModel(
            name='FHIR_GP_Quantity_Distance',
            fields=[
                ('fhir_gp_quantity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_quantity')),
            ],
            bases=('potato.fhir_gp_quantity',),
        ),
        migrations.CreateModel(
            name='FHIR_GP_Quantity_Duration',
            fields=[
                ('fhir_gp_quantity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_quantity')),
            ],
            bases=('potato.fhir_gp_quantity',),
        ),
        migrations.CreateModel(
            name='FHIR_GP_Quantity_Money',
            fields=[
                ('fhir_gp_quantity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_quantity')),
            ],
            bases=('potato.fhir_gp_quantity',),
        ),
        migrations.CreateModel(
            name='FHIR_GP_Quantity_Simple',
            fields=[
                ('fhir_gp_quantity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_quantity')),
            ],
            bases=('potato.fhir_gp_quantity',),
        ),
        migrations.AddField(
            model_name='fhir_allergyintolerance',
            name='onset_range',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_gp_range'),
        ),
        migrations.CreateModel(
            name='FHIR_GP_Timing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_text', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=50, null=True)),
                ('repeat_count', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_PositiveIntField(blank=True, null=True)),
                ('repeat_countMax', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_PositiveIntField(blank=True, null=True)),
                ('repeat_duration', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DecimalField(blank=True, decimal_places=17, max_digits=18, null=True)),
                ('repeat_durationMax', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DecimalField(blank=True, decimal_places=17, max_digits=18, null=True)),
                ('repeat_duration_unit', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, choices=[('s', 'Second'), ('min', 'Minute'), ('h', 'Hour'), ('d', 'Day'), ('wk', 'Week'), ('mo', 'Month')], max_length=20, null=True)),
                ('repeat_frequency', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_PositiveIntField(blank=True, null=True)),
                ('repeat_frequencyMmax', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_PositiveIntField(blank=True, null=True)),
                ('repeat_period', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DecimalField(blank=True, decimal_places=17, max_digits=18, null=True)),
                ('repeat_periodMax', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DecimalField(blank=True, decimal_places=17, max_digits=18, null=True)),
                ('repeat_periodUnit', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, choices=[('s', 'Second'), ('min', 'Minute'), ('h', 'Hour'), ('d', 'Day'), ('wk', 'Week'), ('mo', 'Month')], max_length=20, null=True)),
                ('repeat_offset', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_UnsignedIntField(blank=True, null=True)),
                ('code_cc', models.ManyToManyField(limit_choices_to={'codings__binding_rule': 'https://www.hl7.org/fhir/valueset-timing-abbreviation.html'}, to='potato.fhir_gp_coding')),
                ('repeat_bounds_period', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_gp_period')),
                ('repeat_bounds_range', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_gp_range')),
                ('repeat_bounds_duration', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_gp_quantity_duration')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Timing_Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField(blank=True, null=True)),
                ('timing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='potato.fhir_gp_timing')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Timing_repeat_dayOfWeek',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dayOfWeek', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, choices=[('sun', 'Sunday'), ('mon', 'Monday'), ('tue', 'Tuesday'), ('wed', 'Wednesday'), ('thu', 'Thursday'), ('fri', 'Friday'), ('sat', 'Saturday')], max_length=20, null=True)),
                ('timing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repeat_dayOfWeek', to='potato.fhir_gp_timing')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Timing_repeat_timeOfDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timeOfDay', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_TimeField(blank=True, null=True)),
                ('timing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repeat_timeOfDay', to='potato.fhir_gp_timing')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Timing_repeat_when',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('when', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, choices=[('MORN', 'Morning'), ('MORN.early', 'Early Morning'), ('MORN.late', 'Late Morning'), ('NOON', 'Noon'), ('AFT', 'Afternoon'), ('AFT.early', 'Early Afternoon'), ('AFT.late', 'Late Afternoon'), ('EVE', 'Evening'), ('EVE.early', 'Early Evening'), ('EVE.late', 'Late Evening'), ('NIGHT', 'Night'), ('PHS', 'After Sleep'), ('IMD', 'Immediate'), ('HS', 'Prior to Sleep'), ('WAKE', 'Upon Waking'), ('C', 'Meal'), ('CM', 'Breakfast'), ('CD', 'Lunch'), ('CV', 'Dinner'), ('AC', 'Before Meal'), ('ACM', 'Before Breakfast'), ('ACD', 'Before Lunch'), ('ACV', 'Before Dinner'), ('PC', 'After Meal'), ('PCM', 'After Breakfast'), ('PCD', 'After Lunch'), ('PCV', 'After Dinner')], max_length=20, null=True)),
                ('timing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repeat_when', to='potato.fhir_gp_timing')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Appointment_ServiceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serviceType_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_ServiceTypes', to='potato.fhir_appointment')),
                ('serviceType_cc', models.ManyToManyField(limit_choices_to={'codings__binding_rule': '??'}, to='potato.fhir_gp_coding')),
                ('serviceType_ref', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appointments_serviceType_healthcareService', to='potato.fhir_healthcareservice')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_MedicationRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statusReason_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('intent', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(choices=[('proposal', 'Proposal'), ('plan', 'Plan'), ('order', 'Order'), ('original-order', 'Original Order'), ('reflex-order', 'Reflex Order'), ('filler-order', 'Filler Order'), ('instance-order', 'Instance Order'), ('option', 'Option')], max_length=16)),
                ('priority', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(choices=[('routine', 'Routine'), ('urgent', 'Urgent'), ('asap', 'ASAP'), ('stat', 'Stat')], max_length=10, null=True)),
                ('doNotPerform', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_BooleanField(default=False)),
                ('medication_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('authoredOn', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField(blank=True, null=True)),
                ('reported', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_BooleanField()),
                ('performerType_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('courseOfTherapyType_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('renderedDosageInstruction', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_MarkdownField()),
                ('dispenseRequest_numberOfRepeatsAllowed', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_UnsignedIntField(default=0)),
                ('dispenseRequest_doseAdministrationAid_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('substitution_allowed', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_BooleanField()),
                ('substitution_reason_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('basedOn_CarePlan', models.ManyToManyField(blank=True, related_name='mr_basedOn_CarePlan', to='potato.fhir_careplan')),
                ('basedOn_ImmunizationRecommendation', models.ManyToManyField(blank=True, related_name='mr_basedOn_ImmunizationRecommendation', to='potato.fhir_immunizationrecommendation')),
                ('basedOn_MedicationRequest', models.ManyToManyField(blank=True, related_name='mr_basedOn_MedicationRequest', to='potato.fhir_medicationrequest')),
                ('courseOfTherapyType_cc', models.ManyToManyField(blank=True, limit_choices_to={'codings__binding_rule': ''}, related_name='course_of_therapy_type', to='potato.fhir_gp_coding')),
                ('dispenseRequest_doseAdministrationAid_cc', models.ManyToManyField(blank=True, limit_choices_to={'codings__binding_rule': ''}, related_name='dose_administration_aid', to='potato.fhir_gp_coding')),
                ('dispenseRequest_validityPeriod', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mr_dispenseRequest_validityPeriod', to='potato.fhir_gp_period')),
                ('effectiveDosagePeriod', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_gp_period')),
                ('encounter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='encounter', to='potato.fhir_encounter')),
                ('groupIdentifier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_gp_identifier')),
                ('informationSource_group', models.ManyToManyField(blank=True, related_name='informationSource_group', to='potato.fhir_medication')),
                ('informationSource_organization', models.ManyToManyField(blank=True, related_name='informationSource_organization', to='potato.fhir_medication')),
                ('informationSource_patient', models.ManyToManyField(blank=True, related_name='informationSource_patient', to='potato.fhir_medication')),
                ('informationSource_practitioner', models.ManyToManyField(blank=True, related_name='informationSource_practitioner', to='potato.fhir_medication')),
                ('informationSource_practitionerRole', models.ManyToManyField(blank=True, related_name='informationSource_practitionerRole', to='potato.fhir_medication')),
                ('informationSource_relatedPerson', models.ManyToManyField(blank=True, related_name='informationSource_relatedPerson', to='potato.fhir_medication')),
                ('insurance_claimResponse', models.ManyToManyField(blank=True, to='potato.fhir_claimresponse')),
                ('insurance_coverage', models.ManyToManyField(blank=True, to='potato.fhir_coverage')),
                ('medication_cc', models.ManyToManyField(blank=True, limit_choices_to={'codings__binding_rule': 'todo'}, related_name='medication_request_medication', to='potato.fhir_gp_coding')),
                ('medication_ref', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='medication', to='potato.fhir_medication')),
                ('performerType_cc', models.ManyToManyField(blank=True, limit_choices_to={'codings__binding_rule': 'idk'}, related_name='performer_type', to='potato.fhir_gp_coding')),
                ('performer_careTeam', models.ManyToManyField(blank=True, related_name='performer_careTeam', to='potato.fhir_careteam')),
                ('performer_deviceDefinition', models.ManyToManyField(blank=True, related_name='performer_deviceDefinition', to='potato.fhir_devicedefinition')),
                ('performer_group', models.ManyToManyField(blank=True, related_name='performer_group', to='potato.fhir_group')),
                ('performer_healthcareService', models.ManyToManyField(blank=True, related_name='performer_healthcareService', to='potato.fhir_healthcareservice')),
                ('priorPrescription', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_medicationrequest')),
                ('requester_device', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='requester_device', to='potato.fhir_device')),
                ('statusReason_cc', models.ManyToManyField(blank=True, limit_choices_to={'codings__binding_rule': 'todo'}, related_name='status_reason', to='potato.fhir_gp_coding')),
                ('substitution_reason_cc', models.ManyToManyField(blank=True, limit_choices_to={'codings__binding_rule': ''}, related_name='substitution_reason', to='potato.fhir_gp_coding')),
                ('dispenseRequest_dispenser', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_organization')),
                ('performer_organization', models.ManyToManyField(blank=True, related_name='performer_organization', to='potato.fhir_organization')),
                ('requester_organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='requester_organization', to='potato.fhir_organization')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_MedicationRequest_Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('category_cc', models.ManyToManyField(limit_choices_to={'codings__binding_rule': 'todo'}, to='potato.fhir_gp_coding')),
                ('medicationRequest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_medicationrequest')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_MedicationRequest_Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('device_cc', models.ManyToManyField(limit_choices_to={'codings__binding_rule': 'todo'}, to='potato.fhir_gp_coding')),
                ('device_ref', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='medication', to='potato.fhir_devicedefinition')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_MedicationRequest_Reason_Condition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason_condition_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('medicationRequest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_medicationrequest')),
                ('reason_condition_cc', models.ManyToManyField(blank=True, limit_choices_to={'codings__binding_rule': ''}, to='potato.fhir_gp_coding')),
                ('reason_condition_ref', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reason_condition', to='potato.fhir_condition')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_MedicationRequest_Reason_DiagnosticReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason_diagnosticReport_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('medicationRequest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_medicationrequest')),
                ('reason_diagnosticReport_cc', models.ManyToManyField(blank=True, limit_choices_to={'codings__binding_rule': ''}, to='potato.fhir_gp_coding')),
                ('reason_diagnosticReport_ref', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reason_diagnosticReport', to='potato.fhir_diagnosticreport')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Observation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instantiates_canonical', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CanonicalField(blank=True, max_length=1000, null=True)),
                ('status', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(choices=[('registered', 'Registered'), ('preliminary', 'Preliminary'), ('final', 'Final'), ('amended', 'Amended'), ('corrected', 'Corrected'), ('cancelled', 'Cancelled'), ('entered-in-error', 'Entered in Error'), ('unknown', 'Unknown')], default='unknown', max_length=20)),
                ('basedOn_carePlan', models.ManyToManyField(blank=True, related_name='observation_basedOn_carePlans', to='potato.fhir_careplan')),
                ('basedOn_deviceRequest', models.ManyToManyField(blank=True, related_name='observation_basedOn_deviceRequests', to='potato.fhir_devicerequest')),
                ('basedOn_immunizationRecommendation', models.ManyToManyField(blank=True, related_name='observation_basedOn_immunizationRecommendations', to='potato.fhir_immunizationrecommendation')),
                ('basedOn_medicationRequest', models.ManyToManyField(blank=True, related_name='observation_basedOn_medicationRequests', to='potato.fhir_medicationrequest')),
                ('basedOn_nutritionOrder', models.ManyToManyField(blank=True, related_name='observation_basedOn_nutritionOrders', to='potato.fhir_nutritionorder')),
                ('instantiates_reference', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_instantiates_reference', to='potato.fhir_observationdefinition')),
                ('basedOn_serviceRequest', models.ManyToManyField(blank=True, related_name='observation_basedOn_serviceRequests', to='potato.fhir_servicerequest')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_MedicationRequest_Reason_Observation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason_observation_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('medicationRequest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_medicationrequest')),
                ('reason_observation_cc', models.ManyToManyField(blank=True, limit_choices_to={'codings__binding_rule': ''}, to='potato.fhir_gp_coding')),
                ('reason_observation_ref', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reason_observation', to='potato.fhir_observation')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_AllergyIntolerance_Reaction_Manifestation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manifestation_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=5000, null=True)),
                ('reaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manifestations', to='potato.fhir_allergyintolerance_reaction')),
                ('manifestation_cc', models.ManyToManyField(blank=True, limit_choices_to={'codings__binding_rule': 'https://www.hl7.org/fhir/valueset-clinical-findings.html'}, to='potato.fhir_gp_coding')),
                ('manifestation_ref', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_observation')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_BooleanField(help_text="Whether this patient's record is in active use", null=True)),
                ('gender', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other'), ('unknown', 'Unknown')], max_length=10, null=True)),
                ('birthDate_date', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateField(blank=True, null=True)),
                ('birthDate_date_precision', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateField_Precision(blank=True, choices=[('year', 'Year'), ('month', 'Month'), ('day', 'Day')], default='day', max_length=5, null=True)),
                ('deceased_boolean', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_BooleanField(help_text='Indicates if the individual is deceased', null=True)),
                ('deceased_date_time', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField(null=True)),
                ('marital_status_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('multiple_birth_boolean', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_BooleanField(null=True)),
                ('multiple_birth_integer', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_PositiveIntField(blank=True, null=True)),
                ('generalPractitioners_organization', models.ManyToManyField(related_name='patient_generalPractitioner_organization', to='potato.fhir_organization')),
                ('managing_organization_foreignKey', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='patient_managingOrganization_organization', to='potato.fhir_organization')),
            ],
        ),
        migrations.AddField(
            model_name='fhir_medicationrequest',
            name='performer_patient',
            field=models.ManyToManyField(blank=True, related_name='performer_patient', to='potato.fhir_patient'),
        ),
        migrations.AddField(
            model_name='fhir_medicationrequest',
            name='requester_patient',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='requester_patient', to='potato.fhir_patient'),
        ),
        migrations.AddField(
            model_name='fhir_medicationrequest',
            name='subject_group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mr_subject_group', to='potato.fhir_patient'),
        ),
        migrations.AddField(
            model_name='fhir_medicationrequest',
            name='subject_patient',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mr_subject_patient', to='potato.fhir_patient'),
        ),
        migrations.AddField(
            model_name='fhir_appointment_participant',
            name='actor_patient',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_patient'),
        ),
        migrations.AddField(
            model_name='fhir_appointment',
            name='subject_group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subject_patient', to='potato.fhir_patient'),
        ),
        migrations.AddField(
            model_name='fhir_appointment',
            name='subject_patient',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subject_group', to='potato.fhir_patient'),
        ),
        migrations.AddField(
            model_name='fhir_allergyintolerance',
            name='asserter_patient',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='asserted_allergies_as_patient', to='potato.fhir_patient'),
        ),
        migrations.AddField(
            model_name='fhir_allergyintolerance',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_patient'),
        ),
        migrations.AddField(
            model_name='fhir_allergyintolerance',
            name='recorder_patient',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recorded_allergies_as_patient', to='potato.fhir_patient'),
        ),
        migrations.CreateModel(
            name='FHIR_Patient_Communication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferred', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_BooleanField()),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_communications', to='potato.fhir_patient')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Patient_Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other'), ('unknown', 'Unknown')], help_text='male | female | other | unknown', max_length=10, null=True)),
                ('address', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='patient_contact_address', to='potato.fhir_gp_address')),
                ('name', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='patient_contact_name', to='potato.fhir_gp_humanname')),
                ('organization_foreigkey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_contact_organization', to='potato.fhir_organization')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_contacts', to='potato.fhir_patient')),
                ('period', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_gp_period')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Patient_Contact_Relationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_contact_relationships', to='potato.fhir_patient_contact')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Patient_Link',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link_type', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(choices=[('replaced-by', 'Replaced by'), ('replaces', 'Replaces'), ('refer', 'Refer'), ('seealso', 'See also')], max_length=20)),
                ('from_patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_patient_links', to='potato.fhir_patient')),
                ('to_patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_patient_links', to='potato.fhir_patient')),
                ('other_related_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='link_other_relatedPerson', to='potato.fhir_relatedperson')),
            ],
        ),
        migrations.AddField(
            model_name='fhir_patient',
            name='link',
            field=models.ManyToManyField(related_name='patient_links', through='potato.FHIR_Patient_Link', to='potato.fhir_patient'),
        ),
        migrations.AddField(
            model_name='fhir_patient',
            name='generalPractitioners_practitioner',
            field=models.ManyToManyField(related_name='patient_generalPractitioner_practitioner', to='potato.fhir_practitioner'),
        ),
        migrations.AddField(
            model_name='fhir_medicationrequest',
            name='performer_practitioner',
            field=models.ManyToManyField(blank=True, related_name='performer_practitioner', to='potato.fhir_practitioner'),
        ),
        migrations.AddField(
            model_name='fhir_medicationrequest',
            name='recorder_practitioner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recorder_practitioner', to='potato.fhir_practitioner'),
        ),
        migrations.AddField(
            model_name='fhir_medicationrequest',
            name='requester_practitioner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='requester_practitioner', to='potato.fhir_practitioner'),
        ),
        migrations.AddField(
            model_name='fhir_appointment_participant',
            name='actor_practitioner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_practitioner'),
        ),
        migrations.AddField(
            model_name='fhir_allergyintolerance',
            name='asserter_practitioner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='asserted_allergies_as_practitioner', to='potato.fhir_practitioner'),
        ),
        migrations.AddField(
            model_name='fhir_allergyintolerance',
            name='recorder_practitioner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recorded_allergies_as_practitioner', to='potato.fhir_practitioner'),
        ),
        migrations.CreateModel(
            name='FHIR_Practitioner_Communication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('preferred', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_BooleanField(blank=True, null=True)),
                ('language_cc', models.ManyToManyField(limit_choices_to={'codings__binding_rule': 'All Languages'}, to='potato.fhir_gp_coding')),
                ('practitioner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='practitioner_communications', to='potato.fhir_practitioner')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Practitioner_Qualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('status_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('code_cc', models.ManyToManyField(limit_choices_to={'codings__binding_rule': 'hl7VS-degreeLicenseCertificate'}, to='potato.fhir_gp_coding')),
                ('issuer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='qualification_issuers', to='potato.fhir_organization')),
                ('period', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_gp_period')),
                ('practitioner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='practitioner_qualifications', to='potato.fhir_practitioner')),
                ('status_cc', models.ManyToManyField(blank=True, limit_choices_to={'codings__binding_rule': 'Qualification Status'}, related_name='qualification_status', to='potato.fhir_gp_coding')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_PractitionerRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_BooleanField(blank=True, null=True)),
                ('display', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('availability', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_availability')),
                ('endpoints', models.ManyToManyField(blank=True, related_name='endpoint_practitioner_roles', to='potato.fhir_endpoint')),
                ('healthcare_service', models.ManyToManyField(blank=True, related_name='healthcare_service_practitioner_roles', to='potato.fhir_healthcareservice')),
                ('location', models.ManyToManyField(blank=True, related_name='location_practitioner_roles', to='potato.fhir_location')),
                ('network', models.ManyToManyField(blank=True, related_name='network_practitioner_roles', to='potato.fhir_organization')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organization_roles', to='potato.fhir_organization')),
                ('period', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_gp_period')),
                ('practitioner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='practitioner_roles', to='potato.fhir_practitioner')),
            ],
        ),
        migrations.AddField(
            model_name='fhir_patient',
            name='generalPractitioners_practitionerRole',
            field=models.ManyToManyField(related_name='patient_generalPractitioner_practitionerRole', to='potato.fhir_practitionerrole'),
        ),
        migrations.AddField(
            model_name='fhir_medicationrequest',
            name='performer_practitionerRole',
            field=models.ManyToManyField(blank=True, related_name='performer_practitionerRole', to='potato.fhir_practitionerrole'),
        ),
        migrations.AddField(
            model_name='fhir_medicationrequest',
            name='recorder_practitionerRole',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recorder_practitionerRole', to='potato.fhir_practitionerrole'),
        ),
        migrations.AddField(
            model_name='fhir_medicationrequest',
            name='requester_practitionerRole',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='requester_practitionerRole', to='potato.fhir_practitionerrole'),
        ),
        migrations.AddField(
            model_name='fhir_appointment_participant',
            name='actor_practitioner_role',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_practitionerrole'),
        ),
        migrations.AddField(
            model_name='fhir_allergyintolerance',
            name='asserter_practitionerRole',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='asserted_allergies_as_role', to='potato.fhir_practitionerrole'),
        ),
        migrations.AddField(
            model_name='fhir_allergyintolerance',
            name='recorder_practitionerRole',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recorded_allergies_as_role', to='potato.fhir_practitionerrole'),
        ),
        migrations.CreateModel(
            name='FHIR_PractitionerRole_Characteristic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('characteristic_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('characteristic_cc', models.ManyToManyField(limit_choices_to={'codings__binding_rule': 'Service Mode'}, to='potato.fhir_gp_coding')),
                ('practitioner_role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='practitioner_role_characteristics', to='potato.fhir_practitionerrole')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_PractitionerRole_Code',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('code_cc', models.ManyToManyField(limit_choices_to={'codings__binding_rule': 'Practitioner Role'}, to='potato.fhir_gp_coding')),
                ('practitioner_role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='practitioner_role_codes', to='potato.fhir_practitionerrole')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_PractitionerRole_Communication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('language_cc', models.ManyToManyField(limit_choices_to={'codings__binding_rule': 'All Languages'}, to='potato.fhir_gp_coding')),
                ('practitioner_role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='practitioner_role_communications', to='potato.fhir_practitionerrole')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_PractitionerRole_Specialty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specialty_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('practitioner_role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='practitioner_role_specialties', to='potato.fhir_practitionerrole')),
                ('specialty_cc', models.ManyToManyField(limit_choices_to={'codings__binding_rule': 'Practice Setting Code Value Set'}, to='potato.fhir_gp_coding')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_MedicationRequest_Reason_Procedure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason_procedure_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('medicationRequest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_medicationrequest')),
                ('reason_procedure_cc', models.ManyToManyField(blank=True, limit_choices_to={'codings__binding_rule': ''}, to='potato.fhir_gp_coding')),
                ('reason_procedure_ref', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reason_procedure', to='potato.fhir_procedure')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Appointment_Reason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_reason', to='potato.fhir_appointment')),
                ('reason_condition', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reason_conditions', to='potato.fhir_condition')),
                ('reason_diagnosticReport', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reason_diagnostic_reports', to='potato.fhir_diagnosticreport')),
                ('reason_cc', models.ManyToManyField(limit_choices_to={'codings__binding_rule': '??'}, to='potato.fhir_gp_coding')),
                ('reason_immunizationReccommendation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reason_immunization_recommendations', to='potato.fhir_immunizationrecommendation')),
                ('reason_observation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reason_observations', to='potato.fhir_observation')),
                ('reason_procedure', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reason_procedures', to='potato.fhir_procedure')),
            ],
        ),
        migrations.AddField(
            model_name='fhir_medicationrequest',
            name='eventHistory',
            field=models.ManyToManyField(to='potato.fhir_provenance'),
        ),
        migrations.AddField(
            model_name='fhir_medicationrequest',
            name='performer_relatedPerson',
            field=models.ManyToManyField(blank=True, related_name='performer_relatedPerson', to='potato.fhir_relatedperson'),
        ),
        migrations.AddField(
            model_name='fhir_medicationrequest',
            name='requester_relatedPerson',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='requester_relatedPerson', to='potato.fhir_relatedperson'),
        ),
        migrations.CreateModel(
            name='FHIR_GP_Signature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('when', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_InstantField(blank=True, max_length=99999, null=True)),
                ('targetFormat', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, max_length=255, null=True)),
                ('sigFormat', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, max_length=255, null=True)),
                ('data', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_Base64BinaryField(blank=True, null=True)),
                ('onBehalfOf_device_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='onBehalfOf_device', to='potato.fhir_device')),
                ('type', models.ManyToManyField(blank=True, related_name='types', to='potato.fhir_gp_coding')),
                ('who_device_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='who_device', to='potato.fhir_device')),
                ('onBehalfOf_organization_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='onBehalfOf_organization', to='potato.fhir_organization')),
                ('who_organization_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='who_organization', to='potato.fhir_organization')),
                ('onBehalfOf_patient_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='onBehalfOf_patient', to='potato.fhir_patient')),
                ('who_patient_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='who_patient', to='potato.fhir_patient')),
                ('onBehalfOf_practitioner_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='onBehalfOf_practitioner', to='potato.fhir_practitioner')),
                ('who_practitioner_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='who_practitioner', to='potato.fhir_practitioner')),
                ('onBehalfOf_relatedPerson_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='onBehalfOf_relatedPerson', to='potato.fhir_relatedperson')),
                ('who_relatedPerson_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='who_relatedPerson', to='potato.fhir_relatedperson')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Annotation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_string', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('time_datetime', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField(blank=True, null=True)),
                ('time_datetime_precision', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField_Precision(blank=True, choices=[('year', 'Year'), ('month', 'Month'), ('day', 'Day'), ('seconds', 'Seconds')], default='day', max_length=7, null=True)),
                ('text', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_MarkdownField(max_length=99999)),
                ('author_organization_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='author_organization', to='potato.fhir_organization')),
                ('author_patient_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='author_patient', to='potato.fhir_patient')),
                ('author_practitioner_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='author_practitioner', to='potato.fhir_practitioner')),
                ('author_practitionerRole_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='author_practitionerRole', to='potato.fhir_practitionerrole')),
                ('author_relatedPerson_foreignKey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='author_relatedPerson', to='potato.fhir_relatedperson')),
            ],
        ),
        migrations.AddField(
            model_name='fhir_appointment_participant',
            name='actor_related_person',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_relatedperson'),
        ),
        migrations.CreateModel(
            name='FHIR_AllergyIntolerance_Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('function_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=5000, null=True)),
                ('allergy_intolerance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_allergyintolerance')),
                ('actor_careTeam', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_careteam')),
                ('actor_device', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_device')),
                ('function_cc', models.ManyToManyField(limit_choices_to={'codings__binding_rule': 'https://www.hl7.org/fhir/valueset-participation-role-type.html'}, to='potato.fhir_gp_coding')),
                ('actor_organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_organization')),
                ('actor_patient', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_patient')),
                ('actor_practitioner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_practitioner')),
                ('actor_practitionerRole', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_practitionerrole')),
                ('actor_relatedPerson', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_relatedperson')),
            ],
        ),
        migrations.AddField(
            model_name='fhir_medicationrequest',
            name='basedOn_RequestOrchestration',
            field=models.ManyToManyField(blank=True, related_name='mr_basedOn_RequestOrchestration', to='potato.fhir_requestorchestration'),
        ),
        migrations.AddField(
            model_name='fhir_medicationrequest',
            name='basedOn_ServiceRequest',
            field=models.ManyToManyField(blank=True, related_name='mr_basedOn_ServiceRequest', to='potato.fhir_servicerequest'),
        ),
        migrations.CreateModel(
            name='FHIR_SP_Meta_Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CanonicalField(max_length=255)),
                ('meta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profiles', to='potato.fhir_sp_meta')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_SP_Meta_Security',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(max_length=99999)),
                ('meta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='securitys', to='potato.fhir_sp_meta')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_SP_Meta_Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(max_length=255)),
                ('meta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='potato.fhir_sp_meta')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Appointment_BasedOn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('basedOn_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_basedOn', to='potato.fhir_appointment')),
                ('basedOn_carePlan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='based_on_care_plans', to='potato.fhir_careplan')),
                ('basedOn_deviceRequest', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='based_on_device_requests', to='potato.fhir_devicerequest')),
                ('basedOn_cc', models.ManyToManyField(limit_choices_to={'codings__binding_rule': '??'}, to='potato.fhir_gp_coding')),
                ('basedOn_immunizationRecommendation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='based_on_immunization_recommendations', to='potato.fhir_immunizationrecommendation')),
                ('basedOn_medicationRequest', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='based_on_medication_requests', to='potato.fhir_medicationrequest')),
                ('basedOn_nutritionOrder', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='based_on_nutrition_orders', to='potato.fhir_nutritionorder')),
                ('basedOn_requestOrchestration', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='based_on_request_orchestrations', to='potato.fhir_requestorchestration')),
                ('basedOn_serviceRequest', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='based_on_service_requests', to='potato.fhir_servicerequest')),
                ('basedOn_visionPrescription', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='based_on_vision_prescriptions', to='potato.fhir_visionprescription')),
            ],
        ),
        migrations.CreateModel(
            name='TriggeredByThrough',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(choices=[('reflex', 'Reflex'), ('repeat', 'Repeat'), ('re-run', 'Re-run')], max_length=7)),
                ('reason', models.CharField(blank=True, max_length=255, null=True)),
                ('status', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(choices=[('registered', 'Registered'), ('preliminary', 'Preliminary'), ('final', 'Final'), ('amended', 'Amended'), ('corrected', 'Corrected'), ('cancelled', 'Cancelled'), ('entered-in-error', 'Entered in Error'), ('unknown', 'Unknown')], default='unknown', max_length=20)),
                ('effective_dateTime', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField(blank=True, null=True)),
                ('effective_string', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('effective_period', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_effective_period', to='potato.fhir_gp_period')),
                ('effective_timing', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_effective_timing', to='potato.fhir_gp_timing')),
                ('encounter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_encounter', to='potato.fhir_encounter')),
                ('from_Observation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='observation', to='potato.fhir_observation')),
                ('partOf_genomicStudy', models.ManyToManyField(blank=True, related_name='observation_partOf_genomicStudies', to='potato.fhir_genomicstudy')),
                ('partOf_imagingStudy', models.ManyToManyField(blank=True, related_name='observation_partOf_imagingStudies', to='potato.fhir_imagingstudy')),
                ('partOf_immunization', models.ManyToManyField(blank=True, related_name='observation_partOf_immunizations', to='potato.fhir_immunization')),
                ('partOf_medicationAdministration', models.ManyToManyField(blank=True, related_name='observation_partOf_medicationAdministrations', to='potato.fhir_medicationadministration')),
                ('partOf_medicationDispense', models.ManyToManyField(blank=True, related_name='observation_partOf_medicationDispensers', to='potato.fhir_medicationdispense')),
                ('partOf_medicationStatement', models.ManyToManyField(blank=True, related_name='observation_partOf_medicationStatements', to='potato.fhir_medicationstatement')),
                ('partOf_procedure', models.ManyToManyField(blank=True, related_name='observation_partOf_procedures', to='potato.fhir_procedure')),
                ('subject_biologicallyDerivedProduct', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_subject_biologicallyDerivedProduct', to='potato.fhir_biologicallyderivedproduct')),
                ('subject_device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_subject_device', to='potato.fhir_device')),
                ('subject_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_subject_group', to='potato.fhir_group')),
                ('subject_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_subject_location', to='potato.fhir_location')),
                ('subject_medication', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_subject_medication', to='potato.fhir_medication')),
                ('subject_nutritionProduct', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_subject_nutritionProduct', to='potato.fhir_nutritionproduct')),
                ('subject_organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_subject_organization', to='potato.fhir_organization')),
                ('subject_patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_subject_patient', to='potato.fhir_patient')),
                ('subject_practitioner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_subject_practitioner', to='potato.fhir_practitioner')),
                ('subject_practitionerRole', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_subject_practitionerRole', to='potato.fhir_practitionerrole')),
                ('subject_procedure', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_subject_procedure', to='potato.fhir_procedure')),
                ('subject_relatedPerson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_subject_relatedPerson', to='potato.fhir_relatedperson')),
                ('subject_substance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_subject_substance', to='potato.fhir_substance')),
                ('toTriggeredBy_Observation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='observation_triggeredBy', to='potato.fhir_observation')),
            ],
        ),
        migrations.AddField(
            model_name='fhir_observation',
            name='triggeredBy',
            field=models.ManyToManyField(related_name='triggeredBys', through='potato.TriggeredByThrough', to='potato.fhir_observation'),
        ),
        migrations.CreateModel(
            name='FHIR_AllergyIntolerance_Identifier',
            fields=[
                ('fhir_gp_identifier_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_identifier')),
                ('allergy_intolerance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='identifiers', to='potato.fhir_allergyintolerance')),
            ],
            bases=('potato.fhir_gp_identifier',),
        ),
        migrations.CreateModel(
            name='FHIR_Appointment_Identifier',
            fields=[
                ('fhir_gp_identifier_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_identifier')),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_identifiers', to='potato.fhir_appointment')),
            ],
            bases=('potato.fhir_gp_identifier',),
        ),
        migrations.CreateModel(
            name='FHIR_Location_Identifier',
            fields=[
                ('fhir_gp_identifier_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_identifier')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='identifiers', to='potato.fhir_location')),
            ],
            bases=('potato.fhir_gp_identifier',),
        ),
        migrations.CreateModel(
            name='FHIR_Observation_Identifier',
            fields=[
                ('fhir_gp_identifier_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_identifier')),
                ('observation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='observation_identifiers', to='potato.fhir_observation')),
            ],
            bases=('potato.fhir_gp_identifier',),
        ),
        migrations.CreateModel(
            name='FHIR_Patient_Identifier',
            fields=[
                ('fhir_gp_identifier_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_identifier')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_identifiers', to='potato.fhir_patient')),
            ],
            bases=('potato.fhir_gp_identifier',),
        ),
        migrations.CreateModel(
            name='FHIR_Practitioner_Identifier',
            fields=[
                ('fhir_gp_identifier_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_identifier')),
                ('practitioner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='practitioner_identifiers', to='potato.fhir_practitioner')),
            ],
            bases=('potato.fhir_gp_identifier',),
        ),
        migrations.CreateModel(
            name='FHIR_Practitioner_Qualification_Identifier',
            fields=[
                ('fhir_gp_identifier_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_identifier')),
                ('qualification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='qualification_identifiers', to='potato.fhir_practitioner_qualification')),
            ],
            bases=('potato.fhir_gp_identifier',),
        ),
        migrations.CreateModel(
            name='FHIR_PractitionerRole_Identifier',
            fields=[
                ('fhir_gp_identifier_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_identifier')),
                ('practitioner_role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='practitioner_role_identifiers', to='potato.fhir_practitionerrole')),
            ],
            bases=('potato.fhir_gp_identifier',),
        ),
        migrations.CreateModel(
            name='FHIR_RelatedPerson_Identifier',
            fields=[
                ('fhir_gp_identifier_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_identifier')),
                ('relatedPerson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='RelatedPerson_identifiers', to='potato.fhir_relatedperson')),
            ],
            bases=('potato.fhir_gp_identifier',),
        ),
        migrations.CreateModel(
            name='FHIR_AllergyIntolerance_Note',
            fields=[
                ('fhir_gp_annotation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_annotation')),
                ('allergy_intolerance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='potato.fhir_allergyintolerance')),
            ],
            bases=('potato.fhir_gp_annotation',),
        ),
        migrations.CreateModel(
            name='FHIR_AllergyIntolerance_Reaction_Note',
            fields=[
                ('fhir_gp_annotation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_annotation')),
                ('reaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reaction_notes', to='potato.fhir_allergyintolerance_reaction')),
            ],
            bases=('potato.fhir_gp_annotation',),
        ),
        migrations.CreateModel(
            name='FHIR_Appointment_Note',
            fields=[
                ('fhir_gp_annotation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_annotation')),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='potato.fhir_appointment')),
            ],
            bases=('potato.fhir_gp_annotation',),
        ),
        migrations.CreateModel(
            name='FHIR_MedicationRequest_Note',
            fields=[
                ('fhir_gp_annotation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_annotation')),
                ('medicationRequest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mr_notes', to='potato.fhir_medicationrequest')),
            ],
            bases=('potato.fhir_gp_annotation',),
        ),
        migrations.CreateModel(
            name='FHIR_PractitionerRole_Contact',
            fields=[
                ('fhir_extendedcontactdetail_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_extendedcontactdetail')),
                ('practitioner_role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='practitioner_role_contacts', to='potato.fhir_practitionerrole')),
            ],
            bases=('potato.fhir_extendedcontactdetail',),
        ),
        migrations.CreateModel(
            name='FHIR_Patient_Address',
            fields=[
                ('fhir_gp_address_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_address')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_addresses', to='potato.fhir_patient')),
            ],
            bases=('potato.fhir_gp_address',),
        ),
        migrations.CreateModel(
            name='FHIR_Practitioner_Address',
            fields=[
                ('fhir_gp_address_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_address')),
                ('practitioner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='practitioner_addresses', to='potato.fhir_practitioner')),
            ],
            bases=('potato.fhir_gp_address',),
        ),
        migrations.CreateModel(
            name='FHIR_Patient_Photo',
            fields=[
                ('fhir_gp_attachment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_attachment')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_photos', to='potato.fhir_patient')),
            ],
            bases=('potato.fhir_gp_attachment',),
        ),
        migrations.CreateModel(
            name='FHIR_Practitioner_Photo',
            fields=[
                ('fhir_gp_attachment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_attachment')),
                ('practitioner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='practitioner_photos', to='potato.fhir_practitioner')),
            ],
            bases=('potato.fhir_gp_attachment',),
        ),
        migrations.CreateModel(
            name='FHIR_Patient_Contact_Telecom',
            fields=[
                ('fhir_gp_contactpoint_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_contactpoint')),
                ('patient_contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_contact_telecoms', to='potato.fhir_patient_contact')),
            ],
            bases=('potato.fhir_gp_contactpoint',),
        ),
        migrations.CreateModel(
            name='FHIR_Patient_Telecom',
            fields=[
                ('fhir_gp_contactpoint_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_contactpoint')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_telecoms', to='potato.fhir_patient')),
            ],
            bases=('potato.fhir_gp_contactpoint',),
        ),
        migrations.CreateModel(
            name='FHIR_Practitioner_Telecom',
            fields=[
                ('fhir_gp_contactpoint_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_contactpoint')),
                ('practitioner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='practitioner_telecoms', to='potato.fhir_practitioner')),
            ],
            bases=('potato.fhir_gp_contactpoint',),
        ),
        migrations.CreateModel(
            name='FHIR_Patient_Name',
            fields=[
                ('fhir_gp_humanname_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_humanname')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_names', to='potato.fhir_patient')),
            ],
            bases=('potato.fhir_gp_humanname',),
        ),
        migrations.CreateModel(
            name='FHIR_Practitioner_Name',
            fields=[
                ('fhir_gp_humanname_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_humanname')),
                ('practitioner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='practitioner_names', to='potato.fhir_practitioner')),
            ],
            bases=('potato.fhir_gp_humanname',),
        ),
        migrations.AddField(
            model_name='fhir_allergyintolerance',
            name='onset_age',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_gp_quantity_age'),
        ),
        migrations.CreateModel(
            name='FHIR_GP_SampledData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interval', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DecimalField(blank=True, decimal_places=17, max_digits=18, null=True)),
                ('intervalUnit', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(max_length=64)),
                ('factor', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DecimalField(blank=True, decimal_places=17, max_digits=18, null=True)),
                ('lowerLimit', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DecimalField(blank=True, decimal_places=17, max_digits=18, null=True)),
                ('upperLimit', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DecimalField(blank=True, decimal_places=17, max_digits=18, null=True)),
                ('dimensions', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_PositiveIntField()),
                ('codeMap', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CanonicalField(blank=True, max_length=256, null=True)),
                ('offsets', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=1024, null=True)),
                ('data', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=1024, null=True)),
                ('origin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sampleddata_origin', to='potato.fhir_gp_quantity_simple')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_RatioRange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('denominator', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ratio_range_denominator', to='potato.fhir_gp_quantity_simple')),
                ('numerator_high', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ratio_range_numerator_high', to='potato.fhir_gp_quantity_simple')),
                ('numerator_low', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ratio_range_numerator_low', to='potato.fhir_gp_quantity_simple')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_GP_Ratio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numerator', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ratio_numerator', to='potato.fhir_gp_quantity')),
                ('denominator', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ratio_denominator', to='potato.fhir_gp_quantity_simple')),
            ],
        ),
        migrations.AddField(
            model_name='fhir_gp_range',
            name='high',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='range_high', to='potato.fhir_gp_quantity_simple'),
        ),
        migrations.AddField(
            model_name='fhir_gp_range',
            name='low',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='range_low', to='potato.fhir_gp_quantity_simple'),
        ),
        migrations.CreateModel(
            name='FHIR_MedicationRequest_DosageInstruction',
            fields=[
                ('fhir_sp_dosage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_sp_dosage')),
                ('medicationRequest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mr_dosageInstruction', to='potato.fhir_medicationrequest')),
            ],
            bases=('potato.fhir_sp_dosage',),
        ),
    ]
