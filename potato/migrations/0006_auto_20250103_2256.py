# Generated by Django 3.2.25 on 2025-01-04 04:56

from django.db import migrations, models
import django.db.models.deletion
import potato.FHIR_DataTypes.FHIR_primitive


class Migration(migrations.Migration):

    dependencies = [
        ('potato', '0005_fhir_gp_quantity_age'),
    ]

    operations = [
        migrations.CreateModel(
            name='FHIR_AllergyIntolerance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, choices=[('food', 'Food'), ('medication', 'Medication'), ('environment', 'Environment'), ('biologic', 'Biologic')], max_length=20, null=True)),
                ('criticality', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, choices=[('low', 'Low'), ('high', 'High'), ('unable-to-assess', 'Unable to Assess')], max_length=20, null=True)),
                ('onset_dateTime', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField(blank=True, null=True)),
                ('onset_string', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=255, null=True)),
                ('recorded_date', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField(blank=True, null=True)),
                ('last_occurrence', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField(blank=True, null=True)),
                ('clinical_status', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='allergy_clinical_status', to='potato.fhir_gp_codeableconcept')),
                ('code', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='allergy_code', to='potato.fhir_gp_codeableconcept')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_AllergyIntolerance_Reaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=1000, null=True)),
                ('onset', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField(blank=True, null=True)),
                ('severity', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(blank=True, choices=[('mild', 'Mild'), ('moderate', 'Moderate'), ('severe', 'Severe')], max_length=10, null=True)),
                ('allergy_intolerance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_allergyintolerance')),
                ('exposure_route', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reaction_exposure_route', to='potato.fhir_gp_codeableconcept')),
                ('substance', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reaction_substance', to='potato.fhir_gp_codeableconcept')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_CareTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Encounter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Observation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_AllergyIntolerance_Reaction_Note',
            fields=[
                ('fhir_gp_annotation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_annotation')),
                ('reaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='potato.fhir_allergyintolerance_reaction')),
            ],
            bases=('potato.fhir_gp_annotation',),
        ),
        migrations.CreateModel(
            name='FHIR_AllergyIntolerance_Reaction_Manifestation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('concept', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_gp_codeableconcept')),
                ('observation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_observation')),
                ('reaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manifestations', to='potato.fhir_allergyintolerance_reaction')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_AllergyIntolerance_Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actor_careTeam', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_careteam')),
                ('actor_device', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_device')),
                ('actor_organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_organization')),
                ('actor_patient', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_patient')),
                ('actor_practitioner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_practitioner')),
                ('actor_practitionerRole', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_practitionerrole')),
                ('actor_relatedPerson', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_relatedperson')),
                ('allergy_intolerance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_allergyintolerance')),
                ('function', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_gp_codeableconcept')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_AllergyIntolerance_Note',
            fields=[
                ('fhir_gp_annotation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_annotation')),
                ('allergy_intolerance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='potato.fhir_allergyintolerance')),
            ],
            bases=('potato.fhir_gp_annotation',),
        ),
        migrations.CreateModel(
            name='FHIR_AllergyIntolerance_Identifier',
            fields=[
                ('fhir_gp_identifier_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_identifier')),
                ('allergy_intolerance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='identifiers', to='potato.fhir_allergyintolerance')),
            ],
            bases=('potato.fhir_gp_identifier',),
        ),
        migrations.CreateModel(
            name='FHIR_AllergyIntolerance_Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', potato.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_CodeField(choices=[('food', 'Food'), ('medication', 'Medication'), ('environment', 'Environment'), ('biologic', 'Biologic')], max_length=20)),
                ('allergy_intolerance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='potato.fhir_allergyintolerance')),
            ],
        ),
        migrations.AddField(
            model_name='fhir_allergyintolerance',
            name='encounter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='potato.fhir_encounter'),
        ),
        migrations.AddField(
            model_name='fhir_allergyintolerance',
            name='onset_age',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='allergy_onset_age', to='potato.fhir_gp_quantity_age'),
        ),
        migrations.AddField(
            model_name='fhir_allergyintolerance',
            name='onset_period',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='allergy_onset_period', to='potato.fhir_gp_period'),
        ),
        migrations.AddField(
            model_name='fhir_allergyintolerance',
            name='onset_range',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='allergy_onset_range', to='potato.fhir_gp_range'),
        ),
        migrations.AddField(
            model_name='fhir_allergyintolerance',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='potato.fhir_patient'),
        ),
        migrations.AddField(
            model_name='fhir_allergyintolerance',
            name='type',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='allergy_type', to='potato.fhir_gp_codeableconcept'),
        ),
        migrations.AddField(
            model_name='fhir_allergyintolerance',
            name='verification_status',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='allergy_verification_status', to='potato.fhir_gp_codeableconcept'),
        ),
    ]
