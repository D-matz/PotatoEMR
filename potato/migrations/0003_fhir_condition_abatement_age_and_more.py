# Generated by Django 5.2 on 2025-04-27 20:41

import django.db.models.deletion
import potato.models_dir.FHIR_DataTypes.FHIR_primitive
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('potato', '0002_rename_onset_fhir_allergyintolerance_onset_string_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='fhir_condition',
            name='abatement_Age',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Condition_abatement_Age', to='potato.fhir_gp_quantity_age'),
        ),
        migrations.AddField(
            model_name='fhir_condition',
            name='abatement_Period',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Condition_abatement_Period', to='potato.fhir_gp_period'),
        ),
        migrations.AddField(
            model_name='fhir_condition',
            name='abatement_Range',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Condition_abatement_Range', to='potato.fhir_gp_range'),
        ),
        migrations.AddField(
            model_name='fhir_condition',
            name='abatement_dateTime',
            field=potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='fhir_condition',
            name='abatement_string',
            field=potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='fhir_condition',
            name='asserter_Device',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Condition_asserter', to='potato.fhir_device'),
        ),
        migrations.AddField(
            model_name='fhir_condition',
            name='asserter_Patient',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Condition_asserter', to='potato.fhir_patient'),
        ),
        migrations.AddField(
            model_name='fhir_condition',
            name='asserter_Practitioner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Condition_asserter', to='potato.fhir_practitioner'),
        ),
        migrations.AddField(
            model_name='fhir_condition',
            name='asserter_PractitionerRole',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Condition_asserter', to='potato.fhir_practitionerrole'),
        ),
        migrations.AddField(
            model_name='fhir_condition',
            name='asserter_RelatedPerson',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Condition_asserter', to='potato.fhir_relatedperson'),
        ),
        migrations.AddField(
            model_name='fhir_condition',
            name='bodyStructure',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Condition_bodyStructure', to='potato.fhir_bodystructure'),
        ),
        migrations.AddField(
            model_name='fhir_condition',
            name='clinicalStatus_cc',
            field=models.ManyToManyField(blank=True, limit_choices_to={'codings__binding_rule': 'TODO'}, related_name='Condition_clinicalStatus', to='potato.fhir_gp_coding'),
        ),
        migrations.AddField(
            model_name='fhir_condition',
            name='clinicalStatus_cctext',
            field=potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=5000, null=True),
        ),
        migrations.AddField(
            model_name='fhir_condition',
            name='code_cc',
            field=models.ManyToManyField(blank=True, limit_choices_to={'codings__binding_rule': 'TODO'}, related_name='Condition_code', to='potato.fhir_gp_coding'),
        ),
        migrations.AddField(
            model_name='fhir_condition',
            name='code_cctext',
            field=potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=5000, null=True),
        ),
        migrations.AddField(
            model_name='fhir_condition',
            name='encounter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Condition_encounter', to='potato.fhir_encounter'),
        ),
        migrations.AddField(
            model_name='fhir_condition',
            name='onset_Age',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Condition_onset_Age', to='potato.fhir_gp_quantity_age'),
        ),
        migrations.AddField(
            model_name='fhir_condition',
            name='onset_Period',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Condition_onset_Period', to='potato.fhir_gp_period'),
        ),
        migrations.AddField(
            model_name='fhir_condition',
            name='onset_Range',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Condition_onset_Range', to='potato.fhir_gp_range'),
        ),
        migrations.AddField(
            model_name='fhir_condition',
            name='onset_dateTime',
            field=potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='fhir_condition',
            name='onset_string',
            field=potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='fhir_condition',
            name='recordedDate',
            field=potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='fhir_condition',
            name='recorder_Patient',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Condition_recorder', to='potato.fhir_patient'),
        ),
        migrations.AddField(
            model_name='fhir_condition',
            name='recorder_Practitioner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Condition_recorder', to='potato.fhir_practitioner'),
        ),
        migrations.AddField(
            model_name='fhir_condition',
            name='recorder_PractitionerRole',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Condition_recorder', to='potato.fhir_practitionerrole'),
        ),
        migrations.AddField(
            model_name='fhir_condition',
            name='recorder_RelatedPerson',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Condition_recorder', to='potato.fhir_relatedperson'),
        ),
        migrations.AddField(
            model_name='fhir_condition',
            name='severity_cc',
            field=models.ManyToManyField(blank=True, limit_choices_to={'codings__binding_rule': 'TODO'}, related_name='Condition_severity', to='potato.fhir_gp_coding'),
        ),
        migrations.AddField(
            model_name='fhir_condition',
            name='severity_cctext',
            field=potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=5000, null=True),
        ),
        migrations.AddField(
            model_name='fhir_condition',
            name='subject_Group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Condition_subject', to='potato.fhir_group'),
        ),
        migrations.AddField(
            model_name='fhir_condition',
            name='subject_Patient',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Condition_subject', to='potato.fhir_patient'),
        ),
        migrations.AddField(
            model_name='fhir_condition',
            name='verificationStatus_cc',
            field=models.ManyToManyField(blank=True, limit_choices_to={'codings__binding_rule': 'TODO'}, related_name='Condition_verificationStatus', to='potato.fhir_gp_coding'),
        ),
        migrations.AddField(
            model_name='fhir_condition',
            name='verificationStatus_cctext',
            field=potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=5000, null=True),
        ),
        migrations.CreateModel(
            name='FHIR_Condition_bodySite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bodySite_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=5000, null=True)),
                ('Condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Condition_bodySite', to='potato.fhir_condition')),
                ('bodySite_cc', models.ManyToManyField(blank=True, limit_choices_to={'codings__binding_rule': 'TODO'}, related_name='Condition_bodySite', to='potato.fhir_gp_coding')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Condition_category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=5000, null=True)),
                ('Condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Condition_category', to='potato.fhir_condition')),
                ('category_cc', models.ManyToManyField(blank=True, limit_choices_to={'codings__binding_rule': 'TODO'}, related_name='Condition_category', to='potato.fhir_gp_coding')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Condition_evidence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evidence_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=5000, null=True)),
                ('Condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Condition_evidence', to='potato.fhir_condition')),
                ('evidence_cc', models.ManyToManyField(blank=True, limit_choices_to={'codings__binding_rule': 'TODO'}, related_name='Condition_evidence', to='potato.fhir_gp_coding')),
            ],
        ),
        migrations.CreateModel(
            name='FHIR_Condition_identifier',
            fields=[
                ('fhir_gp_identifier_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_identifier')),
                ('Condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Condition_identifier', to='potato.fhir_condition')),
            ],
            bases=('potato.fhir_gp_identifier',),
        ),
        migrations.CreateModel(
            name='FHIR_Condition_note',
            fields=[
                ('fhir_gp_annotation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='potato.fhir_gp_annotation')),
                ('Condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Condition_note', to='potato.fhir_condition')),
            ],
            bases=('potato.fhir_gp_annotation',),
        ),
        migrations.CreateModel(
            name='FHIR_Condition_stage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summary_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=5000, null=True)),
                ('type_cctext', potato.models_dir.FHIR_DataTypes.FHIR_primitive.FHIR_primitive_StringField(blank=True, max_length=5000, null=True)),
                ('Condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Condition_stage', to='potato.fhir_condition')),
                ('assessment_ClinicalAssessment', models.ManyToManyField(blank=True, related_name='Condition_stage_assessment', to='potato.fhir_clinicalassessment')),
                ('assessment_DiagnosticReport', models.ManyToManyField(blank=True, related_name='Condition_stage_assessment', to='potato.fhir_diagnosticreport')),
                ('assessment_Observation', models.ManyToManyField(blank=True, related_name='Condition_stage_assessment', to='potato.fhir_observation')),
                ('summary_cc', models.ManyToManyField(blank=True, limit_choices_to={'codings__binding_rule': 'TODO'}, related_name='Condition_stage_summary', to='potato.fhir_gp_coding')),
                ('type_cc', models.ManyToManyField(blank=True, limit_choices_to={'codings__binding_rule': 'TODO'}, related_name='Condition_stage_type', to='potato.fhir_gp_coding')),
            ],
        ),
    ]
