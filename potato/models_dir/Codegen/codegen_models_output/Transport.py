#FHIR Resource created by python potato/models_dir/Codegen/codegen_models.py
from django.db import models
from ..FHIR_DataTypes.FHIR_generalpurpose import *
from ..FHIR_DataTypes.FHIR_specialpurpose import *
from ..FHIR_DataTypes.FHIR_metadata import *
from ..FHIR_DataTypes.FHIR_primitive import *

class FHIR_Transport(models.Model):
    instantiates = FHIR_primitive_CanonicalField(null=True, blank=True, )
    basedOn_Task = models.ManyToManyField("FHIR_Task", related_name="Transport_basedOn", blank=True)
    basedOn_ServiceRequest = models.ManyToManyField("FHIR_ServiceRequest", related_name="Transport_basedOn", blank=True)
    basedOn_DeviceRequest = models.ManyToManyField("FHIR_DeviceRequest", related_name="Transport_basedOn", blank=True)
    basedOn_MedicationRequest = models.ManyToManyField("FHIR_MedicationRequest", related_name="Transport_basedOn", blank=True)
    basedOn_RequestOrchestration = models.ManyToManyField("FHIR_RequestOrchestration", related_name="Transport_basedOn", blank=True)
    basedOn_SupplyRequest = models.ManyToManyField("FHIR_SupplyRequest", related_name="Transport_basedOn", blank=True)
    basedOn_VisionPrescription = models.ManyToManyField("FHIR_VisionPrescription", related_name="Transport_basedOn", blank=True)
    groupIdentifier = models.OneToOneField("FHIR_GP_Identifier", related_name='Transport_groupIdentifier', null=True, blank=True, on_delete=models.SET_NULL)
    partOf = models.ManyToManyField("FHIR_Transport", related_name="Transport_partOf", blank=True)
    class StatusChoices(models.TextChoices): PREPARATION = 'preparation', 'Preparation'; IN_PROGRESS = 'in-progress', 'In-progress'; NOT_DONE = 'not-done', 'Not-done'; SUSPENDED = 'suspended', 'Suspended'; STOPPED = 'stopped', 'Stopped'; ON_HOLD = 'on-hold', 'On-hold'; COMPLETED = 'completed', 'Completed'; ENTERED_IN_ERROR = 'entered-in-error', 'Entered-in-error'; UNKNOWN = 'unknown', 'Unknown'; 
    status = FHIR_primitive_CodeField(choices=StatusChoices.choices, null=True, blank=True, )
    BINDING_statusReason = "TODO"
    statusReason_cc = models.ManyToManyField(FHIR_GP_Coding, limit_choices_to={"codings__binding_rule": BINDING_statusReason}, related_name='Transport_statusReason', blank=True)
    statusReason_cctext = FHIR_primitive_StringField(max_length=5000, null=True, blank=True)
    BINDING_code = "TODO"
    code_cc = models.ManyToManyField(FHIR_GP_Coding, limit_choices_to={"codings__binding_rule": BINDING_code}, related_name='Transport_code', blank=True)
    code_cctext = FHIR_primitive_StringField(max_length=5000, null=True, blank=True)
    description = FHIR_primitive_StringField(null=True, blank=True, )
    focus_Patient = models.ForeignKey("FHIR_Patient", related_name="Transport_focus", null=True, blank=True, on_delete=models.SET_NULL)
    focus_Specimen = models.ForeignKey("FHIR_Specimen", related_name="Transport_focus", null=True, blank=True, on_delete=models.SET_NULL)
    focus_Substance = models.ForeignKey("FHIR_Substance", related_name="Transport_focus", null=True, blank=True, on_delete=models.SET_NULL)
    focus_Medication = models.ForeignKey("FHIR_Medication", related_name="Transport_focus", null=True, blank=True, on_delete=models.SET_NULL)
    focus_Device = models.ForeignKey("FHIR_Device", related_name="Transport_focus", null=True, blank=True, on_delete=models.SET_NULL)
    focus_ResearchSubject = models.ForeignKey("FHIR_ResearchSubject", related_name="Transport_focus", null=True, blank=True, on_delete=models.SET_NULL)
    focus_InventoryItem = models.ForeignKey("FHIR_InventoryItem", related_name="Transport_focus", null=True, blank=True, on_delete=models.SET_NULL)
    focus_NutritionProduct = models.ForeignKey("FHIR_NutritionProduct", related_name="Transport_focus", null=True, blank=True, on_delete=models.SET_NULL)
    focus_BiologicallyDerivedProduct = models.ForeignKey("FHIR_BiologicallyDerivedProduct", related_name="Transport_focus", null=True, blank=True, on_delete=models.SET_NULL)
    focus_Group = models.ForeignKey("FHIR_Group", related_name="Transport_focus", null=True, blank=True, on_delete=models.SET_NULL)
    for_CareTeam = models.ForeignKey("FHIR_CareTeam", related_name="Transport_for", null=True, blank=True, on_delete=models.SET_NULL)
    for_Device = models.ForeignKey("FHIR_Device", related_name="Transport_for", null=True, blank=True, on_delete=models.SET_NULL)
    for_Group = models.ForeignKey("FHIR_Group", related_name="Transport_for", null=True, blank=True, on_delete=models.SET_NULL)
    for_HealthcareService = models.ForeignKey("FHIR_HealthcareService", related_name="Transport_for", null=True, blank=True, on_delete=models.SET_NULL)
    for_Organization = models.ForeignKey("FHIR_Organization", related_name="Transport_for", null=True, blank=True, on_delete=models.SET_NULL)
    for_Patient = models.ForeignKey("FHIR_Patient", related_name="Transport_for", null=True, blank=True, on_delete=models.SET_NULL)
    for_Practitioner = models.ForeignKey("FHIR_Practitioner", related_name="Transport_for", null=True, blank=True, on_delete=models.SET_NULL)
    for_PractitionerRole = models.ForeignKey("FHIR_PractitionerRole", related_name="Transport_for", null=True, blank=True, on_delete=models.SET_NULL)
    for_RelatedPerson = models.ForeignKey("FHIR_RelatedPerson", related_name="Transport_for", null=True, blank=True, on_delete=models.SET_NULL)
    encounter = models.ForeignKey("FHIR_Encounter", related_name="Transport_encounter", null=True, blank=True, on_delete=models.SET_NULL)
    completionTime = FHIR_primitive_DateTimeField(null=True, blank=True, )
    authoredOn = FHIR_primitive_DateTimeField(null=True, blank=True, )
    lastModified = FHIR_primitive_DateTimeField(null=True, blank=True, )
    requester_Device = models.ForeignKey("FHIR_Device", related_name="Transport_requester", null=True, blank=True, on_delete=models.SET_NULL)
    requester_Organization = models.ForeignKey("FHIR_Organization", related_name="Transport_requester", null=True, blank=True, on_delete=models.SET_NULL)
    requester_Patient = models.ForeignKey("FHIR_Patient", related_name="Transport_requester", null=True, blank=True, on_delete=models.SET_NULL)
    requester_Practitioner = models.ForeignKey("FHIR_Practitioner", related_name="Transport_requester", null=True, blank=True, on_delete=models.SET_NULL)
    requester_PractitionerRole = models.ForeignKey("FHIR_PractitionerRole", related_name="Transport_requester", null=True, blank=True, on_delete=models.SET_NULL)
    requester_RelatedPerson = models.ForeignKey("FHIR_RelatedPerson", related_name="Transport_requester", null=True, blank=True, on_delete=models.SET_NULL)
    owner_Practitioner = models.ForeignKey("FHIR_Practitioner", related_name="Transport_owner", null=True, blank=True, on_delete=models.SET_NULL)
    owner_PractitionerRole = models.ForeignKey("FHIR_PractitionerRole", related_name="Transport_owner", null=True, blank=True, on_delete=models.SET_NULL)
    owner_Organization = models.ForeignKey("FHIR_Organization", related_name="Transport_owner", null=True, blank=True, on_delete=models.SET_NULL)
    owner_CareTeam = models.ForeignKey("FHIR_CareTeam", related_name="Transport_owner", null=True, blank=True, on_delete=models.SET_NULL)
    owner_HealthcareService = models.ForeignKey("FHIR_HealthcareService", related_name="Transport_owner", null=True, blank=True, on_delete=models.SET_NULL)
    owner_Patient = models.ForeignKey("FHIR_Patient", related_name="Transport_owner", null=True, blank=True, on_delete=models.SET_NULL)
    owner_Device = models.ForeignKey("FHIR_Device", related_name="Transport_owner", null=True, blank=True, on_delete=models.SET_NULL)
    owner_RelatedPerson = models.ForeignKey("FHIR_RelatedPerson", related_name="Transport_owner", null=True, blank=True, on_delete=models.SET_NULL)
    location = models.ForeignKey("FHIR_Location", related_name="Transport_location", null=True, blank=True, on_delete=models.SET_NULL)
    insurance_Coverage = models.ManyToManyField("FHIR_Coverage", related_name="Transport_insurance", blank=True)
    insurance_ClaimResponse = models.ManyToManyField("FHIR_ClaimResponse", related_name="Transport_insurance", blank=True)
    relevantHistory = models.ManyToManyField("FHIR_Provenance", related_name="Transport_relevantHistory", blank=True)
    requestedLocation = models.ForeignKey("FHIR_Location", related_name="Transport_requestedLocation", null=True, blank=True, on_delete=models.SET_NULL)
    currentLocation = models.ForeignKey("FHIR_Location", related_name="Transport_currentLocation", null=True, blank=True, on_delete=models.SET_NULL)
    BINDING_reason = "TODO"
    reason_cc = models.ManyToManyField(FHIR_GP_Coding, limit_choices_to={"codings__binding_rule": BINDING_reason}, related_name='Transport_reason', blank=True)
    reason_cctext = FHIR_primitive_StringField(max_length=5000, null=True, blank=True)
    history = models.ForeignKey("FHIR_Transport", related_name="Transport_history", null=True, blank=True, on_delete=models.SET_NULL)

class FHIR_Transport_identifier(FHIR_GP_Identifier):
    Transport = models.ForeignKey(FHIR_Transport, related_name='Transport_identifier', null=False, on_delete=models.CASCADE)

class FHIR_Transport_performerType(models.Model):
    Transport = models.ForeignKey(FHIR_Transport, related_name='Transport_performerType', null=False, on_delete=models.CASCADE)
    BINDING_performerType = "TODO"
    performerType_cc = models.ManyToManyField(FHIR_GP_Coding, limit_choices_to={"codings__binding_rule": BINDING_performerType}, related_name='Transport_performerType', blank=True)
    performerType_cctext = FHIR_primitive_StringField(max_length=5000, null=True, blank=True)
    
class FHIR_Transport_note(FHIR_GP_Annotation):
    Transport = models.ForeignKey(FHIR_Transport, related_name='Transport_note', null=False, on_delete=models.CASCADE)

class FHIR_Transport_restriction(models.Model):
    Transport = models.ForeignKey(FHIR_Transport, related_name='Transport_restriction', null=False, on_delete=models.CASCADE)
    repetitions = FHIR_primitive_PositiveIntField(null=True, blank=True, )
    period = models.OneToOneField("FHIR_GP_Period", related_name='Transport_restriction_period', null=True, blank=True, on_delete=models.SET_NULL)
    recipient_Patient = models.ManyToManyField("FHIR_Patient", related_name="Transport_restriction_recipient", blank=True)
    recipient_Practitioner = models.ManyToManyField("FHIR_Practitioner", related_name="Transport_restriction_recipient", blank=True)
    recipient_PractitionerRole = models.ManyToManyField("FHIR_PractitionerRole", related_name="Transport_restriction_recipient", blank=True)
    recipient_RelatedPerson = models.ManyToManyField("FHIR_RelatedPerson", related_name="Transport_restriction_recipient", blank=True)
    recipient_Group = models.ManyToManyField("FHIR_Group", related_name="Transport_restriction_recipient", blank=True)
    recipient_Organization = models.ManyToManyField("FHIR_Organization", related_name="Transport_restriction_recipient", blank=True)

class FHIR_Transport_input(models.Model):
    Transport = models.ForeignKey(FHIR_Transport, related_name='Transport_input', null=False, on_delete=models.CASCADE)
    BINDING_type = "TODO"
    type_cc = models.ManyToManyField(FHIR_GP_Coding, limit_choices_to={"codings__binding_rule": BINDING_type}, related_name='Transport_input_type', blank=True)
    type_cctext = FHIR_primitive_StringField(max_length=5000, null=True, blank=True)
    value_base64Binary = FHIR_primitive_Base64BinaryField(null=True, blank=True, )
    value_boolean = FHIR_primitive_BooleanField(null=True, blank=True, )
    value_canonical = FHIR_primitive_CanonicalField(null=True, blank=True, )
    class Value_codeChoices(models.TextChoices): TODO = 'TODO', 'Todo'; 
    value_code = FHIR_primitive_CodeField(choices=Value_codeChoices.choices, null=True, blank=True, )
    value_date = FHIR_primitive_DateField(null=True, blank=True, )
    value_dateTime = FHIR_primitive_DateTimeField(null=True, blank=True, )
    value_decimal = FHIR_primitive_DecimalField(null=True, blank=True, )
    value_id = FHIR_primitive_IdField(null=True, blank=True, )
    value_instant = FHIR_primitive_InstantField(null=True, blank=True, )
    value_markdown = FHIR_primitive_MarkdownField(null=True, blank=True, )
    value_oid = FHIR_primitive_OID_Field(null=True, blank=True, )
    value_positiveInt = FHIR_primitive_PositiveIntField(null=True, blank=True, )
    value_string = FHIR_primitive_StringField(null=True, blank=True, )
    value_time = FHIR_primitive_TimeField(null=True, blank=True, )
    value_unsignedInt = FHIR_primitive_UnsignedIntField(null=True, blank=True, )
    value_uri = FHIR_primitive_URIField(null=True, blank=True, )
    value_url = FHIR_primitive_URLField(null=True, blank=True, )
    value_uuid = FHIR_primitive_UUIDField(null=True, blank=True, )
    value_Address = models.OneToOneField("FHIR_GP_Address", related_name='Transport_input_value_Address', null=True, blank=True, on_delete=models.SET_NULL)
    value_Age = models.OneToOneField("FHIR_GP_Quantity_Age", related_name='Transport_input_value_Age', null=True, blank=True, on_delete=models.SET_NULL)
    value_Annotation = models.OneToOneField("FHIR_GP_Annotation", related_name='Transport_input_value_Annotation', null=True, blank=True, on_delete=models.SET_NULL)
    value_Attachment = models.OneToOneField("FHIR_GP_Attachment", related_name='Transport_input_value_Attachment', null=True, blank=True, on_delete=models.SET_NULL)
    BINDING_value_CodeableConcept = "TODO"
    value_CodeableConcept_cc = models.ManyToManyField(FHIR_GP_Coding, limit_choices_to={"codings__binding_rule": BINDING_value_CodeableConcept}, related_name='Transport_input_value_CodeableConcept', blank=True)
    value_CodeableConcept_cctext = FHIR_primitive_StringField(max_length=5000, null=True, blank=True)
    value_Coding = models.OneToOneField("FHIR_GP_Coding", related_name='Transport_input_value_Coding', null=True, blank=True, on_delete=models.SET_NULL)
    value_ContactPoint = models.OneToOneField("FHIR_GP_ContactPoint", related_name='Transport_input_value_ContactPoint', null=True, blank=True, on_delete=models.SET_NULL)
    value_Distance = models.OneToOneField("FHIR_GP_Quantity_Distance", related_name='Transport_input_value_Distance', null=True, blank=True, on_delete=models.SET_NULL)
    value_Duration = models.OneToOneField("FHIR_GP_Quantity_Duration", related_name='Transport_input_value_Duration', null=True, blank=True, on_delete=models.SET_NULL)
    value_HumanName = models.OneToOneField("FHIR_GP_HumanName", related_name='Transport_input_value_HumanName', null=True, blank=True, on_delete=models.SET_NULL)
    value_Identifier = models.OneToOneField("FHIR_GP_Identifier", related_name='Transport_input_value_Identifier', null=True, blank=True, on_delete=models.SET_NULL)
    value_Money = models.OneToOneField("FHIR_GP_Quantity_Money", related_name='Transport_input_value_Money', null=True, blank=True, on_delete=models.SET_NULL)
    value_Period = models.OneToOneField("FHIR_GP_Period", related_name='Transport_input_value_Period', null=True, blank=True, on_delete=models.SET_NULL)
    value_Quantity = models.OneToOneField("FHIR_GP_Quantity", related_name='Transport_input_value_Quantity', null=True, blank=True, on_delete=models.SET_NULL)
    value_Range = models.OneToOneField("FHIR_GP_Range", related_name='Transport_input_value_Range', null=True, blank=True, on_delete=models.SET_NULL)
    value_Ratio = models.OneToOneField("FHIR_GP_Ratio", related_name='Transport_input_value_Ratio', null=True, blank=True, on_delete=models.SET_NULL)
    value_SampledData = models.OneToOneField("FHIR_GP_SampledData", related_name='Transport_input_value_SampledData', null=True, blank=True, on_delete=models.SET_NULL)
    value_Signature = models.OneToOneField("FHIR_GP_Signature", related_name='Transport_input_value_Signature', null=True, blank=True, on_delete=models.SET_NULL)
    value_Timing = models.OneToOneField("FHIR_GP_Timing", related_name='Transport_input_value_Timing', null=True, blank=True, on_delete=models.SET_NULL)
    value_ExtendedContactDetail = models.OneToOneField("FHIR_meta_ExtendedContactDetail", related_name='Transport_input_value_ExtendedContactDetail', null=True, blank=True, on_delete=models.SET_NULL)
    value_Dosage = models.OneToOneField("FHIR_SP_Dosage", related_name='Transport_input_value_Dosage', null=True, blank=True, on_delete=models.SET_NULL)
    value_Meta = models.OneToOneField("FHIR_SP_Meta", related_name='Transport_input_value_Meta', null=True, blank=True, on_delete=models.SET_NULL)

class FHIR_Transport_output(models.Model):
    Transport = models.ForeignKey(FHIR_Transport, related_name='Transport_output', null=False, on_delete=models.CASCADE)
    BINDING_type = "TODO"
    type_cc = models.ManyToManyField(FHIR_GP_Coding, limit_choices_to={"codings__binding_rule": BINDING_type}, related_name='Transport_output_type', blank=True)
    type_cctext = FHIR_primitive_StringField(max_length=5000, null=True, blank=True)
    value_base64Binary = FHIR_primitive_Base64BinaryField(null=True, blank=True, )
    value_boolean = FHIR_primitive_BooleanField(null=True, blank=True, )
    value_canonical = FHIR_primitive_CanonicalField(null=True, blank=True, )
    class Value_codeChoices(models.TextChoices): TODO = 'TODO', 'Todo'; 
    value_code = FHIR_primitive_CodeField(choices=Value_codeChoices.choices, null=True, blank=True, )
    value_date = FHIR_primitive_DateField(null=True, blank=True, )
    value_dateTime = FHIR_primitive_DateTimeField(null=True, blank=True, )
    value_decimal = FHIR_primitive_DecimalField(null=True, blank=True, )
    value_id = FHIR_primitive_IdField(null=True, blank=True, )
    value_instant = FHIR_primitive_InstantField(null=True, blank=True, )
    value_markdown = FHIR_primitive_MarkdownField(null=True, blank=True, )
    value_oid = FHIR_primitive_OID_Field(null=True, blank=True, )
    value_positiveInt = FHIR_primitive_PositiveIntField(null=True, blank=True, )
    value_string = FHIR_primitive_StringField(null=True, blank=True, )
    value_time = FHIR_primitive_TimeField(null=True, blank=True, )
    value_unsignedInt = FHIR_primitive_UnsignedIntField(null=True, blank=True, )
    value_uri = FHIR_primitive_URIField(null=True, blank=True, )
    value_url = FHIR_primitive_URLField(null=True, blank=True, )
    value_uuid = FHIR_primitive_UUIDField(null=True, blank=True, )
    value_Address = models.OneToOneField("FHIR_GP_Address", related_name='Transport_output_value_Address', null=True, blank=True, on_delete=models.SET_NULL)
    value_Age = models.OneToOneField("FHIR_GP_Quantity_Age", related_name='Transport_output_value_Age', null=True, blank=True, on_delete=models.SET_NULL)
    value_Annotation = models.OneToOneField("FHIR_GP_Annotation", related_name='Transport_output_value_Annotation', null=True, blank=True, on_delete=models.SET_NULL)
    value_Attachment = models.OneToOneField("FHIR_GP_Attachment", related_name='Transport_output_value_Attachment', null=True, blank=True, on_delete=models.SET_NULL)
    BINDING_value_CodeableConcept = "TODO"
    value_CodeableConcept_cc = models.ManyToManyField(FHIR_GP_Coding, limit_choices_to={"codings__binding_rule": BINDING_value_CodeableConcept}, related_name='Transport_output_value_CodeableConcept', blank=True)
    value_CodeableConcept_cctext = FHIR_primitive_StringField(max_length=5000, null=True, blank=True)
    value_Coding = models.OneToOneField("FHIR_GP_Coding", related_name='Transport_output_value_Coding', null=True, blank=True, on_delete=models.SET_NULL)
    value_ContactPoint = models.OneToOneField("FHIR_GP_ContactPoint", related_name='Transport_output_value_ContactPoint', null=True, blank=True, on_delete=models.SET_NULL)
    value_Distance = models.OneToOneField("FHIR_GP_Quantity_Distance", related_name='Transport_output_value_Distance', null=True, blank=True, on_delete=models.SET_NULL)
    value_Duration = models.OneToOneField("FHIR_GP_Quantity_Duration", related_name='Transport_output_value_Duration', null=True, blank=True, on_delete=models.SET_NULL)
    value_HumanName = models.OneToOneField("FHIR_GP_HumanName", related_name='Transport_output_value_HumanName', null=True, blank=True, on_delete=models.SET_NULL)
    value_Identifier = models.OneToOneField("FHIR_GP_Identifier", related_name='Transport_output_value_Identifier', null=True, blank=True, on_delete=models.SET_NULL)
    value_Money = models.OneToOneField("FHIR_GP_Quantity_Money", related_name='Transport_output_value_Money', null=True, blank=True, on_delete=models.SET_NULL)
    value_Period = models.OneToOneField("FHIR_GP_Period", related_name='Transport_output_value_Period', null=True, blank=True, on_delete=models.SET_NULL)
    value_Quantity = models.OneToOneField("FHIR_GP_Quantity", related_name='Transport_output_value_Quantity', null=True, blank=True, on_delete=models.SET_NULL)
    value_Range = models.OneToOneField("FHIR_GP_Range", related_name='Transport_output_value_Range', null=True, blank=True, on_delete=models.SET_NULL)
    value_Ratio = models.OneToOneField("FHIR_GP_Ratio", related_name='Transport_output_value_Ratio', null=True, blank=True, on_delete=models.SET_NULL)
    value_SampledData = models.OneToOneField("FHIR_GP_SampledData", related_name='Transport_output_value_SampledData', null=True, blank=True, on_delete=models.SET_NULL)
    value_Signature = models.OneToOneField("FHIR_GP_Signature", related_name='Transport_output_value_Signature', null=True, blank=True, on_delete=models.SET_NULL)
    value_Timing = models.OneToOneField("FHIR_GP_Timing", related_name='Transport_output_value_Timing', null=True, blank=True, on_delete=models.SET_NULL)
    value_ExtendedContactDetail = models.OneToOneField("FHIR_meta_ExtendedContactDetail", related_name='Transport_output_value_ExtendedContactDetail', null=True, blank=True, on_delete=models.SET_NULL)
    value_Dosage = models.OneToOneField("FHIR_SP_Dosage", related_name='Transport_output_value_Dosage', null=True, blank=True, on_delete=models.SET_NULL)
    value_Meta = models.OneToOneField("FHIR_SP_Meta", related_name='Transport_output_value_Meta', null=True, blank=True, on_delete=models.SET_NULL)
