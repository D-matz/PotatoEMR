#FHIR Resource created by python potato/models_dir/Codegen/codegen_models.py
from django.db import models
from ..FHIR_DataTypes.FHIR_generalpurpose import *
from ..FHIR_DataTypes.FHIR_specialpurpose import *
from ..FHIR_DataTypes.FHIR_metadata import *
from ..FHIR_DataTypes.FHIR_primitive import *

class FHIR_Task(models.Model):
    instantiatesCanonical = FHIR_primitive_CanonicalField(null=True, blank=True, )
    instantiatesUri = FHIR_primitive_URIField(null=True, blank=True, )
    groupIdentifier = models.OneToOneField("FHIR_GP_Identifier", related_name='Task_groupIdentifier', null=True, blank=True, on_delete=models.SET_NULL)
    partOf = models.ManyToManyField("FHIR_Task", related_name="Task_partOf", blank=True)
    class StatusChoices(models.TextChoices): DRAFT = 'draft', 'Draft'; REQUESTED = 'requested', 'Requested'; RECEIVED = 'received', 'Received'; ACCEPTED = 'accepted', 'Accepted'; PLUS = '+', '+'; 
    status = FHIR_primitive_CodeField(choices=StatusChoices.choices, null=True, blank=True, )
    BINDING_businessStatus = "TODO"
    businessStatus_cc = models.ManyToManyField(FHIR_GP_Coding, limit_choices_to={"codings__binding_rule": BINDING_businessStatus}, related_name='Task_businessStatus', blank=True)
    businessStatus_cctext = FHIR_primitive_StringField(max_length=5000, null=True, blank=True)
    class IntentChoices(models.TextChoices): UNKNOWN = 'unknown', 'Unknown'; PROPOSAL = 'proposal', 'Proposal'; PLAN = 'plan', 'Plan'; ORDER = 'order', 'Order'; ORIGINAL_ORDER = 'original-order', 'Original-order'; REFLEX_ORDER = 'reflex-order', 'Reflex-order'; FILLER_ORDER = 'filler-order', 'Filler-order'; INSTANCE_ORDER = 'instance-order', 'Instance-order'; OPTION = 'option', 'Option'; 
    intent = FHIR_primitive_CodeField(choices=IntentChoices.choices, null=True, blank=True, )
    class PriorityChoices(models.TextChoices): ROUTINE = 'routine', 'Routine'; URGENT = 'urgent', 'Urgent'; ASAP = 'asap', 'Asap'; STAT = 'stat', 'Stat'; 
    priority = FHIR_primitive_CodeField(choices=PriorityChoices.choices, null=True, blank=True, )
    doNotPerform = FHIR_primitive_BooleanField(null=True, blank=True, )
    BINDING_code = "TODO"
    code_cc = models.ManyToManyField(FHIR_GP_Coding, limit_choices_to={"codings__binding_rule": BINDING_code}, related_name='Task_code', blank=True)
    code_cctext = FHIR_primitive_StringField(max_length=5000, null=True, blank=True)
    description = FHIR_primitive_MarkdownField(null=True, blank=True, )
    encounter = models.ForeignKey("FHIR_Encounter", related_name="Task_encounter", null=True, blank=True, on_delete=models.SET_NULL)
    requestedPeriod = models.OneToOneField("FHIR_GP_Period", related_name='Task_requestedPeriod', null=True, blank=True, on_delete=models.SET_NULL)
    executionPeriod = models.OneToOneField("FHIR_GP_Period", related_name='Task_executionPeriod', null=True, blank=True, on_delete=models.SET_NULL)
    authoredOn = FHIR_primitive_DateTimeField(null=True, blank=True, )
    lastModified = FHIR_primitive_DateTimeField(null=True, blank=True, )
    requester_Device = models.ForeignKey("FHIR_Device", related_name="Task_requester", null=True, blank=True, on_delete=models.SET_NULL)
    requester_Organization = models.ForeignKey("FHIR_Organization", related_name="Task_requester", null=True, blank=True, on_delete=models.SET_NULL)
    requester_Patient = models.ForeignKey("FHIR_Patient", related_name="Task_requester", null=True, blank=True, on_delete=models.SET_NULL)
    requester_Practitioner = models.ForeignKey("FHIR_Practitioner", related_name="Task_requester", null=True, blank=True, on_delete=models.SET_NULL)
    requester_PractitionerRole = models.ForeignKey("FHIR_PractitionerRole", related_name="Task_requester", null=True, blank=True, on_delete=models.SET_NULL)
    requester_RelatedPerson = models.ForeignKey("FHIR_RelatedPerson", related_name="Task_requester", null=True, blank=True, on_delete=models.SET_NULL)
    owner_Practitioner = models.ForeignKey("FHIR_Practitioner", related_name="Task_owner", null=True, blank=True, on_delete=models.SET_NULL)
    owner_PractitionerRole = models.ForeignKey("FHIR_PractitionerRole", related_name="Task_owner", null=True, blank=True, on_delete=models.SET_NULL)
    owner_Organization = models.ForeignKey("FHIR_Organization", related_name="Task_owner", null=True, blank=True, on_delete=models.SET_NULL)
    owner_CareTeam = models.ForeignKey("FHIR_CareTeam", related_name="Task_owner", null=True, blank=True, on_delete=models.SET_NULL)
    owner_Patient = models.ForeignKey("FHIR_Patient", related_name="Task_owner", null=True, blank=True, on_delete=models.SET_NULL)
    owner_RelatedPerson = models.ForeignKey("FHIR_RelatedPerson", related_name="Task_owner", null=True, blank=True, on_delete=models.SET_NULL)
    location = models.ForeignKey("FHIR_Location", related_name="Task_location", null=True, blank=True, on_delete=models.SET_NULL)
    insurance_Coverage = models.ManyToManyField("FHIR_Coverage", related_name="Task_insurance", blank=True)
    insurance_ClaimResponse = models.ManyToManyField("FHIR_ClaimResponse", related_name="Task_insurance", blank=True)
    relevantHistory = models.ManyToManyField("FHIR_Provenance", related_name="Task_relevantHistory", blank=True)

class FHIR_Task_identifier(FHIR_GP_Identifier):
    Task = models.ForeignKey(FHIR_Task, related_name='Task_identifier', null=False, on_delete=models.CASCADE)

class FHIR_Task_requestedPerformer(models.Model):
    Task = models.ForeignKey(FHIR_Task, related_name='Task_requestedPerformer', null=False, on_delete=models.CASCADE)
    BINDING_requestedPerformer = "TODO"
    requestedPerformer_cc = models.ManyToManyField(FHIR_GP_Coding, limit_choices_to={"codings__binding_rule": BINDING_requestedPerformer}, related_name='Task_requestedPerformer', blank=True)
    requestedPerformer_cctext = FHIR_primitive_StringField(max_length=5000, null=True, blank=True)
    requestedPerformer_Practitioner_ref = models.ForeignKey("FHIR_Practitioner", related_name="Task_requestedPerformer_Practitioner", null=True, blank=True, on_delete=models.SET_NULL)
    requestedPerformer_PractitionerRole_ref = models.ForeignKey("FHIR_PractitionerRole", related_name="Task_requestedPerformer_PractitionerRole", null=True, blank=True, on_delete=models.SET_NULL)
    requestedPerformer_Organization_ref = models.ForeignKey("FHIR_Organization", related_name="Task_requestedPerformer_Organization", null=True, blank=True, on_delete=models.SET_NULL)
    requestedPerformer_CareTeam_ref = models.ForeignKey("FHIR_CareTeam", related_name="Task_requestedPerformer_CareTeam", null=True, blank=True, on_delete=models.SET_NULL)
    requestedPerformer_HealthcareService_ref = models.ForeignKey("FHIR_HealthcareService", related_name="Task_requestedPerformer_HealthcareService", null=True, blank=True, on_delete=models.SET_NULL)
    requestedPerformer_Patient_ref = models.ForeignKey("FHIR_Patient", related_name="Task_requestedPerformer_Patient", null=True, blank=True, on_delete=models.SET_NULL)
    requestedPerformer_Device_ref = models.ForeignKey("FHIR_Device", related_name="Task_requestedPerformer_Device", null=True, blank=True, on_delete=models.SET_NULL)
    requestedPerformer_RelatedPerson_ref = models.ForeignKey("FHIR_RelatedPerson", related_name="Task_requestedPerformer_RelatedPerson", null=True, blank=True, on_delete=models.SET_NULL)

class FHIR_Task_performer(models.Model):
    Task = models.ForeignKey(FHIR_Task, related_name='Task_performer', null=False, on_delete=models.CASCADE)
    BINDING_function = "TODO"
    function_cc = models.ManyToManyField(FHIR_GP_Coding, limit_choices_to={"codings__binding_rule": BINDING_function}, related_name='Task_performer_function', blank=True)
    function_cctext = FHIR_primitive_StringField(max_length=5000, null=True, blank=True)
    actor_Practitioner = models.ForeignKey("FHIR_Practitioner", related_name="Task_performer_actor", null=True, blank=True, on_delete=models.SET_NULL)
    actor_Device = models.ForeignKey("FHIR_Device", related_name="Task_performer_actor", null=True, blank=True, on_delete=models.SET_NULL)
    actor_Organization = models.ForeignKey("FHIR_Organization", related_name="Task_performer_actor", null=True, blank=True, on_delete=models.SET_NULL)
    actor_PractitionerRole = models.ForeignKey("FHIR_PractitionerRole", related_name="Task_performer_actor", null=True, blank=True, on_delete=models.SET_NULL)
    actor_Organization = models.ForeignKey("FHIR_Organization", related_name="Task_performer_actor", null=True, blank=True, on_delete=models.SET_NULL)
    actor_CareTeam = models.ForeignKey("FHIR_CareTeam", related_name="Task_performer_actor", null=True, blank=True, on_delete=models.SET_NULL)
    actor_Patient = models.ForeignKey("FHIR_Patient", related_name="Task_performer_actor", null=True, blank=True, on_delete=models.SET_NULL)
    actor_RelatedPerson = models.ForeignKey("FHIR_RelatedPerson", related_name="Task_performer_actor", null=True, blank=True, on_delete=models.SET_NULL)

class FHIR_Task_reason(models.Model):
    Task = models.ForeignKey(FHIR_Task, related_name='Task_reason', null=False, on_delete=models.CASCADE)
    BINDING_reason = "TODO"
    reason_cc = models.ManyToManyField(FHIR_GP_Coding, limit_choices_to={"codings__binding_rule": BINDING_reason}, related_name='Task_reason', blank=True)
    reason_cctext = FHIR_primitive_StringField(max_length=5000, null=True, blank=True)

class FHIR_Task_note(FHIR_GP_Annotation):
    Task = models.ForeignKey(FHIR_Task, related_name='Task_note', null=False, on_delete=models.CASCADE)

class FHIR_Task_restriction(models.Model):
    Task = models.ForeignKey(FHIR_Task, related_name='Task_restriction', null=False, on_delete=models.CASCADE)
    repetitions = FHIR_primitive_PositiveIntField(null=True, blank=True, )
    period = models.OneToOneField("FHIR_GP_Period", related_name='Task_restriction_period', null=True, blank=True, on_delete=models.SET_NULL)
    recipient_Patient = models.ManyToManyField("FHIR_Patient", related_name="Task_restriction_recipient", blank=True)
    recipient_Practitioner = models.ManyToManyField("FHIR_Practitioner", related_name="Task_restriction_recipient", blank=True)
    recipient_PractitionerRole = models.ManyToManyField("FHIR_PractitionerRole", related_name="Task_restriction_recipient", blank=True)
    recipient_RelatedPerson = models.ManyToManyField("FHIR_RelatedPerson", related_name="Task_restriction_recipient", blank=True)
    recipient_Group = models.ManyToManyField("FHIR_Group", related_name="Task_restriction_recipient", blank=True)
    recipient_Organization = models.ManyToManyField("FHIR_Organization", related_name="Task_restriction_recipient", blank=True)

class FHIR_Task_input(models.Model):
    Task = models.ForeignKey(FHIR_Task, related_name='Task_input', null=False, on_delete=models.CASCADE)
    BINDING_type = "TODO"
    type_cc = models.ManyToManyField(FHIR_GP_Coding, limit_choices_to={"codings__binding_rule": BINDING_type}, related_name='Task_input_type', blank=True)
    type_cctext = FHIR_primitive_StringField(max_length=5000, null=True, blank=True)
    value_base64Binary = FHIR_primitive_Base64BinaryField(null=True, blank=True, )
    value_boolean = FHIR_primitive_BooleanField(null=True, blank=True, )
    value_canonical = FHIR_primitive_CanonicalField(null=True, blank=True, )
    class Value_codeChoices(models.TextChoices): TODO = 'TODO', 'Todo'; 
    value_code = FHIR_primitive_CodeField(choices=Value_codeChoices.choices, null=True, blank=True, )
    value_date = FHIR_primitive_DateField(null=True, blank=True, )
    value_dateTime = FHIR_primitive_DateTimeField(null=True, blank=True, )
    value_decimal = FHIR_primitive_DecimalField(null=True, blank=True, )
    value_id = FHIR_primitive_IdField(null=True, blank=True, )
    value_instant = FHIR_primitive_InstantField(null=True, blank=True, )
    value_markdown = FHIR_primitive_MarkdownField(null=True, blank=True, )
    value_oid = FHIR_primitive_OID_Field(null=True, blank=True, )
    value_positiveInt = FHIR_primitive_PositiveIntField(null=True, blank=True, )
    value_string = FHIR_primitive_StringField(null=True, blank=True, )
    value_time = FHIR_primitive_TimeField(null=True, blank=True, )
    value_unsignedInt = FHIR_primitive_UnsignedIntField(null=True, blank=True, )
    value_uri = FHIR_primitive_URIField(null=True, blank=True, )
    value_url = FHIR_primitive_URLField(null=True, blank=True, )
    value_uuid = FHIR_primitive_UUIDField(null=True, blank=True, )
    value_Address = models.OneToOneField("FHIR_GP_Address", related_name='Task_input_value_Address', null=True, blank=True, on_delete=models.SET_NULL)
    value_Age = models.OneToOneField("FHIR_GP_Quantity_Age", related_name='Task_input_value_Age', null=True, blank=True, on_delete=models.SET_NULL)
    value_Annotation = models.OneToOneField("FHIR_GP_Annotation", related_name='Task_input_value_Annotation', null=True, blank=True, on_delete=models.SET_NULL)
    value_Attachment = models.OneToOneField("FHIR_GP_Attachment", related_name='Task_input_value_Attachment', null=True, blank=True, on_delete=models.SET_NULL)
    BINDING_value_CodeableConcept = "TODO"
    value_CodeableConcept_cc = models.ManyToManyField(FHIR_GP_Coding, limit_choices_to={"codings__binding_rule": BINDING_value_CodeableConcept}, related_name='Task_input_value_CodeableConcept', blank=True)
    value_CodeableConcept_cctext = FHIR_primitive_StringField(max_length=5000, null=True, blank=True)
    value_Coding = models.OneToOneField("FHIR_GP_Coding", related_name='Task_input_value_Coding', null=True, blank=True, on_delete=models.SET_NULL)
    value_ContactPoint = models.OneToOneField("FHIR_GP_ContactPoint", related_name='Task_input_value_ContactPoint', null=True, blank=True, on_delete=models.SET_NULL)
    value_Distance = models.OneToOneField("FHIR_GP_Quantity_Distance", related_name='Task_input_value_Distance', null=True, blank=True, on_delete=models.SET_NULL)
    value_Duration = models.OneToOneField("FHIR_GP_Quantity_Duration", related_name='Task_input_value_Duration', null=True, blank=True, on_delete=models.SET_NULL)
    value_HumanName = models.OneToOneField("FHIR_GP_HumanName", related_name='Task_input_value_HumanName', null=True, blank=True, on_delete=models.SET_NULL)
    value_Identifier = models.OneToOneField("FHIR_GP_Identifier", related_name='Task_input_value_Identifier', null=True, blank=True, on_delete=models.SET_NULL)
    value_Money = models.OneToOneField("FHIR_GP_Quantity_Money", related_name='Task_input_value_Money', null=True, blank=True, on_delete=models.SET_NULL)
    value_Period = models.OneToOneField("FHIR_GP_Period", related_name='Task_input_value_Period', null=True, blank=True, on_delete=models.SET_NULL)
    value_Quantity = models.OneToOneField("FHIR_GP_Quantity", related_name='Task_input_value_Quantity', null=True, blank=True, on_delete=models.SET_NULL)
    value_Range = models.OneToOneField("FHIR_GP_Range", related_name='Task_input_value_Range', null=True, blank=True, on_delete=models.SET_NULL)
    value_Ratio = models.OneToOneField("FHIR_GP_Ratio", related_name='Task_input_value_Ratio', null=True, blank=True, on_delete=models.SET_NULL)
    value_SampledData = models.OneToOneField("FHIR_GP_SampledData", related_name='Task_input_value_SampledData', null=True, blank=True, on_delete=models.SET_NULL)
    value_Signature = models.OneToOneField("FHIR_GP_Signature", related_name='Task_input_value_Signature', null=True, blank=True, on_delete=models.SET_NULL)
    value_Timing = models.OneToOneField("FHIR_GP_Timing", related_name='Task_input_value_Timing', null=True, blank=True, on_delete=models.SET_NULL)
    value_ExtendedContactDetail = models.OneToOneField("FHIR_meta_ExtendedContactDetail", related_name='Task_input_value_ExtendedContactDetail', null=True, blank=True, on_delete=models.SET_NULL)
    value_Dosage = models.OneToOneField("FHIR_SP_Dosage", related_name='Task_input_value_Dosage', null=True, blank=True, on_delete=models.SET_NULL)
    value_Meta = models.OneToOneField("FHIR_SP_Meta", related_name='Task_input_value_Meta', null=True, blank=True, on_delete=models.SET_NULL)

class FHIR_Task_output(models.Model):
    Task = models.ForeignKey(FHIR_Task, related_name='Task_output', null=False, on_delete=models.CASCADE)
    BINDING_type = "TODO"
    type_cc = models.ManyToManyField(FHIR_GP_Coding, limit_choices_to={"codings__binding_rule": BINDING_type}, related_name='Task_output_type', blank=True)
    type_cctext = FHIR_primitive_StringField(max_length=5000, null=True, blank=True)
    value_base64Binary = FHIR_primitive_Base64BinaryField(null=True, blank=True, )
    value_boolean = FHIR_primitive_BooleanField(null=True, blank=True, )
    value_canonical = FHIR_primitive_CanonicalField(null=True, blank=True, )
    class Value_codeChoices(models.TextChoices): TODO = 'TODO', 'Todo'; 
    value_code = FHIR_primitive_CodeField(choices=Value_codeChoices.choices, null=True, blank=True, )
    value_date = FHIR_primitive_DateField(null=True, blank=True, )
    value_dateTime = FHIR_primitive_DateTimeField(null=True, blank=True, )
    value_decimal = FHIR_primitive_DecimalField(null=True, blank=True, )
    value_id = FHIR_primitive_IdField(null=True, blank=True, )
    value_instant = FHIR_primitive_InstantField(null=True, blank=True, )
    value_markdown = FHIR_primitive_MarkdownField(null=True, blank=True, )
    value_oid = FHIR_primitive_OID_Field(null=True, blank=True, )
    value_positiveInt = FHIR_primitive_PositiveIntField(null=True, blank=True, )
    value_string = FHIR_primitive_StringField(null=True, blank=True, )
    value_time = FHIR_primitive_TimeField(null=True, blank=True, )
    value_unsignedInt = FHIR_primitive_UnsignedIntField(null=True, blank=True, )
    value_uri = FHIR_primitive_URIField(null=True, blank=True, )
    value_url = FHIR_primitive_URLField(null=True, blank=True, )
    value_uuid = FHIR_primitive_UUIDField(null=True, blank=True, )
    value_Address = models.OneToOneField("FHIR_GP_Address", related_name='Task_output_value_Address', null=True, blank=True, on_delete=models.SET_NULL)
    value_Age = models.OneToOneField("FHIR_GP_Quantity_Age", related_name='Task_output_value_Age', null=True, blank=True, on_delete=models.SET_NULL)
    value_Annotation = models.OneToOneField("FHIR_GP_Annotation", related_name='Task_output_value_Annotation', null=True, blank=True, on_delete=models.SET_NULL)
    value_Attachment = models.OneToOneField("FHIR_GP_Attachment", related_name='Task_output_value_Attachment', null=True, blank=True, on_delete=models.SET_NULL)
    BINDING_value_CodeableConcept = "TODO"
    value_CodeableConcept_cc = models.ManyToManyField(FHIR_GP_Coding, limit_choices_to={"codings__binding_rule": BINDING_value_CodeableConcept}, related_name='Task_output_value_CodeableConcept', blank=True)
    value_CodeableConcept_cctext = FHIR_primitive_StringField(max_length=5000, null=True, blank=True)
    value_Coding = models.OneToOneField("FHIR_GP_Coding", related_name='Task_output_value_Coding', null=True, blank=True, on_delete=models.SET_NULL)
    value_ContactPoint = models.OneToOneField("FHIR_GP_ContactPoint", related_name='Task_output_value_ContactPoint', null=True, blank=True, on_delete=models.SET_NULL)
    value_Distance = models.OneToOneField("FHIR_GP_Quantity_Distance", related_name='Task_output_value_Distance', null=True, blank=True, on_delete=models.SET_NULL)
    value_Duration = models.OneToOneField("FHIR_GP_Quantity_Duration", related_name='Task_output_value_Duration', null=True, blank=True, on_delete=models.SET_NULL)
    value_HumanName = models.OneToOneField("FHIR_GP_HumanName", related_name='Task_output_value_HumanName', null=True, blank=True, on_delete=models.SET_NULL)
    value_Identifier = models.OneToOneField("FHIR_GP_Identifier", related_name='Task_output_value_Identifier', null=True, blank=True, on_delete=models.SET_NULL)
    value_Money = models.OneToOneField("FHIR_GP_Quantity_Money", related_name='Task_output_value_Money', null=True, blank=True, on_delete=models.SET_NULL)
    value_Period = models.OneToOneField("FHIR_GP_Period", related_name='Task_output_value_Period', null=True, blank=True, on_delete=models.SET_NULL)
    value_Quantity = models.OneToOneField("FHIR_GP_Quantity", related_name='Task_output_value_Quantity', null=True, blank=True, on_delete=models.SET_NULL)
    value_Range = models.OneToOneField("FHIR_GP_Range", related_name='Task_output_value_Range', null=True, blank=True, on_delete=models.SET_NULL)
    value_Ratio = models.OneToOneField("FHIR_GP_Ratio", related_name='Task_output_value_Ratio', null=True, blank=True, on_delete=models.SET_NULL)
    value_SampledData = models.OneToOneField("FHIR_GP_SampledData", related_name='Task_output_value_SampledData', null=True, blank=True, on_delete=models.SET_NULL)
    value_Signature = models.OneToOneField("FHIR_GP_Signature", related_name='Task_output_value_Signature', null=True, blank=True, on_delete=models.SET_NULL)
    value_Timing = models.OneToOneField("FHIR_GP_Timing", related_name='Task_output_value_Timing', null=True, blank=True, on_delete=models.SET_NULL)
    value_ExtendedContactDetail = models.OneToOneField("FHIR_meta_ExtendedContactDetail", related_name='Task_output_value_ExtendedContactDetail', null=True, blank=True, on_delete=models.SET_NULL)
    value_Dosage = models.OneToOneField("FHIR_SP_Dosage", related_name='Task_output_value_Dosage', null=True, blank=True, on_delete=models.SET_NULL)
    value_Meta = models.OneToOneField("FHIR_SP_Meta", related_name='Task_output_value_Meta', null=True, blank=True, on_delete=models.SET_NULL)
